
I2C_ArduinoMaster.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000144a  000014de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000144a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800108  00800108  000014e6  2**0
                  ALLOC
  3 .stab         00000c90  00000000  00000000  000014e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000007cb  00000000  00000000  00002178  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00002943  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00002a83  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00002bf3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000483c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00005727  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  000064d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00006634  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  000068c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000708f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ac 30       	cpi	r26, 0x0C	; 12
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	11 e0       	ldi	r17, 0x01	; 1
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	ea e4       	ldi	r30, 0x4A	; 74
      8c:	f4 e1       	ldi	r31, 0x14	; 20
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 bd 06 	call	0xd7a	; 0xd7a <main>
      9e:	0c 94 23 0a 	jmp	0x1446	; 0x1446 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__fixunssfsi>:
      a6:	ef 92       	push	r14
      a8:	ff 92       	push	r15
      aa:	0f 93       	push	r16
      ac:	1f 93       	push	r17
      ae:	7b 01       	movw	r14, r22
      b0:	8c 01       	movw	r16, r24
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__gesf2>
      be:	88 23       	and	r24, r24
      c0:	8c f0       	brlt	.+34     	; 0xe4 <__fixunssfsi+0x3e>
      c2:	c8 01       	movw	r24, r16
      c4:	b7 01       	movw	r22, r14
      c6:	20 e0       	ldi	r18, 0x00	; 0
      c8:	30 e0       	ldi	r19, 0x00	; 0
      ca:	40 e0       	ldi	r20, 0x00	; 0
      cc:	5f e4       	ldi	r21, 0x4F	; 79
      ce:	0e 94 cb 01 	call	0x396	; 0x396 <__subsf3>
      d2:	0e 94 b3 03 	call	0x766	; 0x766 <__fixsfsi>
      d6:	9b 01       	movw	r18, r22
      d8:	ac 01       	movw	r20, r24
      da:	20 50       	subi	r18, 0x00	; 0
      dc:	30 40       	sbci	r19, 0x00	; 0
      de:	40 40       	sbci	r20, 0x00	; 0
      e0:	50 48       	sbci	r21, 0x80	; 128
      e2:	06 c0       	rjmp	.+12     	; 0xf0 <__fixunssfsi+0x4a>
      e4:	c8 01       	movw	r24, r16
      e6:	b7 01       	movw	r22, r14
      e8:	0e 94 b3 03 	call	0x766	; 0x766 <__fixsfsi>
      ec:	9b 01       	movw	r18, r22
      ee:	ac 01       	movw	r20, r24
      f0:	b9 01       	movw	r22, r18
      f2:	ca 01       	movw	r24, r20
      f4:	1f 91       	pop	r17
      f6:	0f 91       	pop	r16
      f8:	ff 90       	pop	r15
      fa:	ef 90       	pop	r14
      fc:	08 95       	ret

000000fe <_fpadd_parts>:
      fe:	a0 e0       	ldi	r26, 0x00	; 0
     100:	b0 e0       	ldi	r27, 0x00	; 0
     102:	e5 e8       	ldi	r30, 0x85	; 133
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <__prologue_saves__>
     10a:	dc 01       	movw	r26, r24
     10c:	2b 01       	movw	r4, r22
     10e:	fa 01       	movw	r30, r20
     110:	9c 91       	ld	r25, X
     112:	92 30       	cpi	r25, 0x02	; 2
     114:	08 f4       	brcc	.+2      	; 0x118 <_fpadd_parts+0x1a>
     116:	39 c1       	rjmp	.+626    	; 0x38a <_fpadd_parts+0x28c>
     118:	eb 01       	movw	r28, r22
     11a:	88 81       	ld	r24, Y
     11c:	82 30       	cpi	r24, 0x02	; 2
     11e:	08 f4       	brcc	.+2      	; 0x122 <_fpadd_parts+0x24>
     120:	33 c1       	rjmp	.+614    	; 0x388 <_fpadd_parts+0x28a>
     122:	94 30       	cpi	r25, 0x04	; 4
     124:	69 f4       	brne	.+26     	; 0x140 <_fpadd_parts+0x42>
     126:	84 30       	cpi	r24, 0x04	; 4
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x2e>
     12a:	2f c1       	rjmp	.+606    	; 0x38a <_fpadd_parts+0x28c>
     12c:	11 96       	adiw	r26, 0x01	; 1
     12e:	9c 91       	ld	r25, X
     130:	11 97       	sbiw	r26, 0x01	; 1
     132:	89 81       	ldd	r24, Y+1	; 0x01
     134:	98 17       	cp	r25, r24
     136:	09 f4       	brne	.+2      	; 0x13a <_fpadd_parts+0x3c>
     138:	28 c1       	rjmp	.+592    	; 0x38a <_fpadd_parts+0x28c>
     13a:	a0 e0       	ldi	r26, 0x00	; 0
     13c:	b1 e0       	ldi	r27, 0x01	; 1
     13e:	25 c1       	rjmp	.+586    	; 0x38a <_fpadd_parts+0x28c>
     140:	84 30       	cpi	r24, 0x04	; 4
     142:	09 f4       	brne	.+2      	; 0x146 <_fpadd_parts+0x48>
     144:	21 c1       	rjmp	.+578    	; 0x388 <_fpadd_parts+0x28a>
     146:	82 30       	cpi	r24, 0x02	; 2
     148:	a9 f4       	brne	.+42     	; 0x174 <_fpadd_parts+0x76>
     14a:	92 30       	cpi	r25, 0x02	; 2
     14c:	09 f0       	breq	.+2      	; 0x150 <_fpadd_parts+0x52>
     14e:	1d c1       	rjmp	.+570    	; 0x38a <_fpadd_parts+0x28c>
     150:	9a 01       	movw	r18, r20
     152:	ad 01       	movw	r20, r26
     154:	88 e0       	ldi	r24, 0x08	; 8
     156:	ea 01       	movw	r28, r20
     158:	09 90       	ld	r0, Y+
     15a:	ae 01       	movw	r20, r28
     15c:	e9 01       	movw	r28, r18
     15e:	09 92       	st	Y+, r0
     160:	9e 01       	movw	r18, r28
     162:	81 50       	subi	r24, 0x01	; 1
     164:	c1 f7       	brne	.-16     	; 0x156 <_fpadd_parts+0x58>
     166:	e2 01       	movw	r28, r4
     168:	89 81       	ldd	r24, Y+1	; 0x01
     16a:	11 96       	adiw	r26, 0x01	; 1
     16c:	9c 91       	ld	r25, X
     16e:	89 23       	and	r24, r25
     170:	81 83       	std	Z+1, r24	; 0x01
     172:	08 c1       	rjmp	.+528    	; 0x384 <_fpadd_parts+0x286>
     174:	92 30       	cpi	r25, 0x02	; 2
     176:	09 f4       	brne	.+2      	; 0x17a <_fpadd_parts+0x7c>
     178:	07 c1       	rjmp	.+526    	; 0x388 <_fpadd_parts+0x28a>
     17a:	12 96       	adiw	r26, 0x02	; 2
     17c:	2d 90       	ld	r2, X+
     17e:	3c 90       	ld	r3, X
     180:	13 97       	sbiw	r26, 0x03	; 3
     182:	eb 01       	movw	r28, r22
     184:	8a 81       	ldd	r24, Y+2	; 0x02
     186:	9b 81       	ldd	r25, Y+3	; 0x03
     188:	14 96       	adiw	r26, 0x04	; 4
     18a:	ad 90       	ld	r10, X+
     18c:	bd 90       	ld	r11, X+
     18e:	cd 90       	ld	r12, X+
     190:	dc 90       	ld	r13, X
     192:	17 97       	sbiw	r26, 0x07	; 7
     194:	ec 80       	ldd	r14, Y+4	; 0x04
     196:	fd 80       	ldd	r15, Y+5	; 0x05
     198:	0e 81       	ldd	r16, Y+6	; 0x06
     19a:	1f 81       	ldd	r17, Y+7	; 0x07
     19c:	91 01       	movw	r18, r2
     19e:	28 1b       	sub	r18, r24
     1a0:	39 0b       	sbc	r19, r25
     1a2:	b9 01       	movw	r22, r18
     1a4:	37 ff       	sbrs	r19, 7
     1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <_fpadd_parts+0xb2>
     1a8:	66 27       	eor	r22, r22
     1aa:	77 27       	eor	r23, r23
     1ac:	62 1b       	sub	r22, r18
     1ae:	73 0b       	sbc	r23, r19
     1b0:	60 32       	cpi	r22, 0x20	; 32
     1b2:	71 05       	cpc	r23, r1
     1b4:	0c f0       	brlt	.+2      	; 0x1b8 <_fpadd_parts+0xba>
     1b6:	61 c0       	rjmp	.+194    	; 0x27a <_fpadd_parts+0x17c>
     1b8:	12 16       	cp	r1, r18
     1ba:	13 06       	cpc	r1, r19
     1bc:	6c f5       	brge	.+90     	; 0x218 <_fpadd_parts+0x11a>
     1be:	37 01       	movw	r6, r14
     1c0:	48 01       	movw	r8, r16
     1c2:	06 2e       	mov	r0, r22
     1c4:	04 c0       	rjmp	.+8      	; 0x1ce <_fpadd_parts+0xd0>
     1c6:	96 94       	lsr	r9
     1c8:	87 94       	ror	r8
     1ca:	77 94       	ror	r7
     1cc:	67 94       	ror	r6
     1ce:	0a 94       	dec	r0
     1d0:	d2 f7       	brpl	.-12     	; 0x1c6 <_fpadd_parts+0xc8>
     1d2:	21 e0       	ldi	r18, 0x01	; 1
     1d4:	30 e0       	ldi	r19, 0x00	; 0
     1d6:	40 e0       	ldi	r20, 0x00	; 0
     1d8:	50 e0       	ldi	r21, 0x00	; 0
     1da:	04 c0       	rjmp	.+8      	; 0x1e4 <_fpadd_parts+0xe6>
     1dc:	22 0f       	add	r18, r18
     1de:	33 1f       	adc	r19, r19
     1e0:	44 1f       	adc	r20, r20
     1e2:	55 1f       	adc	r21, r21
     1e4:	6a 95       	dec	r22
     1e6:	d2 f7       	brpl	.-12     	; 0x1dc <_fpadd_parts+0xde>
     1e8:	21 50       	subi	r18, 0x01	; 1
     1ea:	30 40       	sbci	r19, 0x00	; 0
     1ec:	40 40       	sbci	r20, 0x00	; 0
     1ee:	50 40       	sbci	r21, 0x00	; 0
     1f0:	2e 21       	and	r18, r14
     1f2:	3f 21       	and	r19, r15
     1f4:	40 23       	and	r20, r16
     1f6:	51 23       	and	r21, r17
     1f8:	21 15       	cp	r18, r1
     1fa:	31 05       	cpc	r19, r1
     1fc:	41 05       	cpc	r20, r1
     1fe:	51 05       	cpc	r21, r1
     200:	21 f0       	breq	.+8      	; 0x20a <_fpadd_parts+0x10c>
     202:	21 e0       	ldi	r18, 0x01	; 1
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	40 e0       	ldi	r20, 0x00	; 0
     208:	50 e0       	ldi	r21, 0x00	; 0
     20a:	79 01       	movw	r14, r18
     20c:	8a 01       	movw	r16, r20
     20e:	e6 28       	or	r14, r6
     210:	f7 28       	or	r15, r7
     212:	08 29       	or	r16, r8
     214:	19 29       	or	r17, r9
     216:	3c c0       	rjmp	.+120    	; 0x290 <_fpadd_parts+0x192>
     218:	23 2b       	or	r18, r19
     21a:	d1 f1       	breq	.+116    	; 0x290 <_fpadd_parts+0x192>
     21c:	26 0e       	add	r2, r22
     21e:	37 1e       	adc	r3, r23
     220:	35 01       	movw	r6, r10
     222:	46 01       	movw	r8, r12
     224:	06 2e       	mov	r0, r22
     226:	04 c0       	rjmp	.+8      	; 0x230 <_fpadd_parts+0x132>
     228:	96 94       	lsr	r9
     22a:	87 94       	ror	r8
     22c:	77 94       	ror	r7
     22e:	67 94       	ror	r6
     230:	0a 94       	dec	r0
     232:	d2 f7       	brpl	.-12     	; 0x228 <_fpadd_parts+0x12a>
     234:	21 e0       	ldi	r18, 0x01	; 1
     236:	30 e0       	ldi	r19, 0x00	; 0
     238:	40 e0       	ldi	r20, 0x00	; 0
     23a:	50 e0       	ldi	r21, 0x00	; 0
     23c:	04 c0       	rjmp	.+8      	; 0x246 <_fpadd_parts+0x148>
     23e:	22 0f       	add	r18, r18
     240:	33 1f       	adc	r19, r19
     242:	44 1f       	adc	r20, r20
     244:	55 1f       	adc	r21, r21
     246:	6a 95       	dec	r22
     248:	d2 f7       	brpl	.-12     	; 0x23e <_fpadd_parts+0x140>
     24a:	21 50       	subi	r18, 0x01	; 1
     24c:	30 40       	sbci	r19, 0x00	; 0
     24e:	40 40       	sbci	r20, 0x00	; 0
     250:	50 40       	sbci	r21, 0x00	; 0
     252:	2a 21       	and	r18, r10
     254:	3b 21       	and	r19, r11
     256:	4c 21       	and	r20, r12
     258:	5d 21       	and	r21, r13
     25a:	21 15       	cp	r18, r1
     25c:	31 05       	cpc	r19, r1
     25e:	41 05       	cpc	r20, r1
     260:	51 05       	cpc	r21, r1
     262:	21 f0       	breq	.+8      	; 0x26c <_fpadd_parts+0x16e>
     264:	21 e0       	ldi	r18, 0x01	; 1
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	59 01       	movw	r10, r18
     26e:	6a 01       	movw	r12, r20
     270:	a6 28       	or	r10, r6
     272:	b7 28       	or	r11, r7
     274:	c8 28       	or	r12, r8
     276:	d9 28       	or	r13, r9
     278:	0b c0       	rjmp	.+22     	; 0x290 <_fpadd_parts+0x192>
     27a:	82 15       	cp	r24, r2
     27c:	93 05       	cpc	r25, r3
     27e:	2c f0       	brlt	.+10     	; 0x28a <_fpadd_parts+0x18c>
     280:	1c 01       	movw	r2, r24
     282:	aa 24       	eor	r10, r10
     284:	bb 24       	eor	r11, r11
     286:	65 01       	movw	r12, r10
     288:	03 c0       	rjmp	.+6      	; 0x290 <_fpadd_parts+0x192>
     28a:	ee 24       	eor	r14, r14
     28c:	ff 24       	eor	r15, r15
     28e:	87 01       	movw	r16, r14
     290:	11 96       	adiw	r26, 0x01	; 1
     292:	9c 91       	ld	r25, X
     294:	d2 01       	movw	r26, r4
     296:	11 96       	adiw	r26, 0x01	; 1
     298:	8c 91       	ld	r24, X
     29a:	98 17       	cp	r25, r24
     29c:	09 f4       	brne	.+2      	; 0x2a0 <_fpadd_parts+0x1a2>
     29e:	45 c0       	rjmp	.+138    	; 0x32a <_fpadd_parts+0x22c>
     2a0:	99 23       	and	r25, r25
     2a2:	39 f0       	breq	.+14     	; 0x2b2 <_fpadd_parts+0x1b4>
     2a4:	a8 01       	movw	r20, r16
     2a6:	97 01       	movw	r18, r14
     2a8:	2a 19       	sub	r18, r10
     2aa:	3b 09       	sbc	r19, r11
     2ac:	4c 09       	sbc	r20, r12
     2ae:	5d 09       	sbc	r21, r13
     2b0:	06 c0       	rjmp	.+12     	; 0x2be <_fpadd_parts+0x1c0>
     2b2:	a6 01       	movw	r20, r12
     2b4:	95 01       	movw	r18, r10
     2b6:	2e 19       	sub	r18, r14
     2b8:	3f 09       	sbc	r19, r15
     2ba:	40 0b       	sbc	r20, r16
     2bc:	51 0b       	sbc	r21, r17
     2be:	57 fd       	sbrc	r21, 7
     2c0:	08 c0       	rjmp	.+16     	; 0x2d2 <_fpadd_parts+0x1d4>
     2c2:	11 82       	std	Z+1, r1	; 0x01
     2c4:	33 82       	std	Z+3, r3	; 0x03
     2c6:	22 82       	std	Z+2, r2	; 0x02
     2c8:	24 83       	std	Z+4, r18	; 0x04
     2ca:	35 83       	std	Z+5, r19	; 0x05
     2cc:	46 83       	std	Z+6, r20	; 0x06
     2ce:	57 83       	std	Z+7, r21	; 0x07
     2d0:	1d c0       	rjmp	.+58     	; 0x30c <_fpadd_parts+0x20e>
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	81 83       	std	Z+1, r24	; 0x01
     2d6:	33 82       	std	Z+3, r3	; 0x03
     2d8:	22 82       	std	Z+2, r2	; 0x02
     2da:	88 27       	eor	r24, r24
     2dc:	99 27       	eor	r25, r25
     2de:	dc 01       	movw	r26, r24
     2e0:	82 1b       	sub	r24, r18
     2e2:	93 0b       	sbc	r25, r19
     2e4:	a4 0b       	sbc	r26, r20
     2e6:	b5 0b       	sbc	r27, r21
     2e8:	84 83       	std	Z+4, r24	; 0x04
     2ea:	95 83       	std	Z+5, r25	; 0x05
     2ec:	a6 83       	std	Z+6, r26	; 0x06
     2ee:	b7 83       	std	Z+7, r27	; 0x07
     2f0:	0d c0       	rjmp	.+26     	; 0x30c <_fpadd_parts+0x20e>
     2f2:	22 0f       	add	r18, r18
     2f4:	33 1f       	adc	r19, r19
     2f6:	44 1f       	adc	r20, r20
     2f8:	55 1f       	adc	r21, r21
     2fa:	24 83       	std	Z+4, r18	; 0x04
     2fc:	35 83       	std	Z+5, r19	; 0x05
     2fe:	46 83       	std	Z+6, r20	; 0x06
     300:	57 83       	std	Z+7, r21	; 0x07
     302:	82 81       	ldd	r24, Z+2	; 0x02
     304:	93 81       	ldd	r25, Z+3	; 0x03
     306:	01 97       	sbiw	r24, 0x01	; 1
     308:	93 83       	std	Z+3, r25	; 0x03
     30a:	82 83       	std	Z+2, r24	; 0x02
     30c:	24 81       	ldd	r18, Z+4	; 0x04
     30e:	35 81       	ldd	r19, Z+5	; 0x05
     310:	46 81       	ldd	r20, Z+6	; 0x06
     312:	57 81       	ldd	r21, Z+7	; 0x07
     314:	da 01       	movw	r26, r20
     316:	c9 01       	movw	r24, r18
     318:	01 97       	sbiw	r24, 0x01	; 1
     31a:	a1 09       	sbc	r26, r1
     31c:	b1 09       	sbc	r27, r1
     31e:	8f 5f       	subi	r24, 0xFF	; 255
     320:	9f 4f       	sbci	r25, 0xFF	; 255
     322:	af 4f       	sbci	r26, 0xFF	; 255
     324:	bf 43       	sbci	r27, 0x3F	; 63
     326:	28 f3       	brcs	.-54     	; 0x2f2 <_fpadd_parts+0x1f4>
     328:	0b c0       	rjmp	.+22     	; 0x340 <_fpadd_parts+0x242>
     32a:	91 83       	std	Z+1, r25	; 0x01
     32c:	33 82       	std	Z+3, r3	; 0x03
     32e:	22 82       	std	Z+2, r2	; 0x02
     330:	ea 0c       	add	r14, r10
     332:	fb 1c       	adc	r15, r11
     334:	0c 1d       	adc	r16, r12
     336:	1d 1d       	adc	r17, r13
     338:	e4 82       	std	Z+4, r14	; 0x04
     33a:	f5 82       	std	Z+5, r15	; 0x05
     33c:	06 83       	std	Z+6, r16	; 0x06
     33e:	17 83       	std	Z+7, r17	; 0x07
     340:	83 e0       	ldi	r24, 0x03	; 3
     342:	80 83       	st	Z, r24
     344:	24 81       	ldd	r18, Z+4	; 0x04
     346:	35 81       	ldd	r19, Z+5	; 0x05
     348:	46 81       	ldd	r20, Z+6	; 0x06
     34a:	57 81       	ldd	r21, Z+7	; 0x07
     34c:	57 ff       	sbrs	r21, 7
     34e:	1a c0       	rjmp	.+52     	; 0x384 <_fpadd_parts+0x286>
     350:	c9 01       	movw	r24, r18
     352:	aa 27       	eor	r26, r26
     354:	97 fd       	sbrc	r25, 7
     356:	a0 95       	com	r26
     358:	ba 2f       	mov	r27, r26
     35a:	81 70       	andi	r24, 0x01	; 1
     35c:	90 70       	andi	r25, 0x00	; 0
     35e:	a0 70       	andi	r26, 0x00	; 0
     360:	b0 70       	andi	r27, 0x00	; 0
     362:	56 95       	lsr	r21
     364:	47 95       	ror	r20
     366:	37 95       	ror	r19
     368:	27 95       	ror	r18
     36a:	82 2b       	or	r24, r18
     36c:	93 2b       	or	r25, r19
     36e:	a4 2b       	or	r26, r20
     370:	b5 2b       	or	r27, r21
     372:	84 83       	std	Z+4, r24	; 0x04
     374:	95 83       	std	Z+5, r25	; 0x05
     376:	a6 83       	std	Z+6, r26	; 0x06
     378:	b7 83       	std	Z+7, r27	; 0x07
     37a:	82 81       	ldd	r24, Z+2	; 0x02
     37c:	93 81       	ldd	r25, Z+3	; 0x03
     37e:	01 96       	adiw	r24, 0x01	; 1
     380:	93 83       	std	Z+3, r25	; 0x03
     382:	82 83       	std	Z+2, r24	; 0x02
     384:	df 01       	movw	r26, r30
     386:	01 c0       	rjmp	.+2      	; 0x38a <_fpadd_parts+0x28c>
     388:	d2 01       	movw	r26, r4
     38a:	cd 01       	movw	r24, r26
     38c:	cd b7       	in	r28, 0x3d	; 61
     38e:	de b7       	in	r29, 0x3e	; 62
     390:	e2 e1       	ldi	r30, 0x12	; 18
     392:	0c 94 08 0a 	jmp	0x1410	; 0x1410 <__epilogue_restores__>

00000396 <__subsf3>:
     396:	a0 e2       	ldi	r26, 0x20	; 32
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	e1 ed       	ldi	r30, 0xD1	; 209
     39c:	f1 e0       	ldi	r31, 0x01	; 1
     39e:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__prologue_saves__+0x18>
     3a2:	69 83       	std	Y+1, r22	; 0x01
     3a4:	7a 83       	std	Y+2, r23	; 0x02
     3a6:	8b 83       	std	Y+3, r24	; 0x03
     3a8:	9c 83       	std	Y+4, r25	; 0x04
     3aa:	2d 83       	std	Y+5, r18	; 0x05
     3ac:	3e 83       	std	Y+6, r19	; 0x06
     3ae:	4f 83       	std	Y+7, r20	; 0x07
     3b0:	58 87       	std	Y+8, r21	; 0x08
     3b2:	e9 e0       	ldi	r30, 0x09	; 9
     3b4:	ee 2e       	mov	r14, r30
     3b6:	f1 2c       	mov	r15, r1
     3b8:	ec 0e       	add	r14, r28
     3ba:	fd 1e       	adc	r15, r29
     3bc:	ce 01       	movw	r24, r28
     3be:	01 96       	adiw	r24, 0x01	; 1
     3c0:	b7 01       	movw	r22, r14
     3c2:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     3c6:	8e 01       	movw	r16, r28
     3c8:	0f 5e       	subi	r16, 0xEF	; 239
     3ca:	1f 4f       	sbci	r17, 0xFF	; 255
     3cc:	ce 01       	movw	r24, r28
     3ce:	05 96       	adiw	r24, 0x05	; 5
     3d0:	b8 01       	movw	r22, r16
     3d2:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     3d6:	8a 89       	ldd	r24, Y+18	; 0x12
     3d8:	91 e0       	ldi	r25, 0x01	; 1
     3da:	89 27       	eor	r24, r25
     3dc:	8a 8b       	std	Y+18, r24	; 0x12
     3de:	c7 01       	movw	r24, r14
     3e0:	b8 01       	movw	r22, r16
     3e2:	ae 01       	movw	r20, r28
     3e4:	47 5e       	subi	r20, 0xE7	; 231
     3e6:	5f 4f       	sbci	r21, 0xFF	; 255
     3e8:	0e 94 7f 00 	call	0xfe	; 0xfe <_fpadd_parts>
     3ec:	0e 94 07 04 	call	0x80e	; 0x80e <__pack_f>
     3f0:	a0 96       	adiw	r28, 0x20	; 32
     3f2:	e6 e0       	ldi	r30, 0x06	; 6
     3f4:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__epilogue_restores__+0x18>

000003f8 <__addsf3>:
     3f8:	a0 e2       	ldi	r26, 0x20	; 32
     3fa:	b0 e0       	ldi	r27, 0x00	; 0
     3fc:	e2 e0       	ldi	r30, 0x02	; 2
     3fe:	f2 e0       	ldi	r31, 0x02	; 2
     400:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__prologue_saves__+0x18>
     404:	69 83       	std	Y+1, r22	; 0x01
     406:	7a 83       	std	Y+2, r23	; 0x02
     408:	8b 83       	std	Y+3, r24	; 0x03
     40a:	9c 83       	std	Y+4, r25	; 0x04
     40c:	2d 83       	std	Y+5, r18	; 0x05
     40e:	3e 83       	std	Y+6, r19	; 0x06
     410:	4f 83       	std	Y+7, r20	; 0x07
     412:	58 87       	std	Y+8, r21	; 0x08
     414:	f9 e0       	ldi	r31, 0x09	; 9
     416:	ef 2e       	mov	r14, r31
     418:	f1 2c       	mov	r15, r1
     41a:	ec 0e       	add	r14, r28
     41c:	fd 1e       	adc	r15, r29
     41e:	ce 01       	movw	r24, r28
     420:	01 96       	adiw	r24, 0x01	; 1
     422:	b7 01       	movw	r22, r14
     424:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     428:	8e 01       	movw	r16, r28
     42a:	0f 5e       	subi	r16, 0xEF	; 239
     42c:	1f 4f       	sbci	r17, 0xFF	; 255
     42e:	ce 01       	movw	r24, r28
     430:	05 96       	adiw	r24, 0x05	; 5
     432:	b8 01       	movw	r22, r16
     434:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     438:	c7 01       	movw	r24, r14
     43a:	b8 01       	movw	r22, r16
     43c:	ae 01       	movw	r20, r28
     43e:	47 5e       	subi	r20, 0xE7	; 231
     440:	5f 4f       	sbci	r21, 0xFF	; 255
     442:	0e 94 7f 00 	call	0xfe	; 0xfe <_fpadd_parts>
     446:	0e 94 07 04 	call	0x80e	; 0x80e <__pack_f>
     44a:	a0 96       	adiw	r28, 0x20	; 32
     44c:	e6 e0       	ldi	r30, 0x06	; 6
     44e:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__epilogue_restores__+0x18>

00000452 <__mulsf3>:
     452:	a0 e2       	ldi	r26, 0x20	; 32
     454:	b0 e0       	ldi	r27, 0x00	; 0
     456:	ef e2       	ldi	r30, 0x2F	; 47
     458:	f2 e0       	ldi	r31, 0x02	; 2
     45a:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <__prologue_saves__>
     45e:	69 83       	std	Y+1, r22	; 0x01
     460:	7a 83       	std	Y+2, r23	; 0x02
     462:	8b 83       	std	Y+3, r24	; 0x03
     464:	9c 83       	std	Y+4, r25	; 0x04
     466:	2d 83       	std	Y+5, r18	; 0x05
     468:	3e 83       	std	Y+6, r19	; 0x06
     46a:	4f 83       	std	Y+7, r20	; 0x07
     46c:	58 87       	std	Y+8, r21	; 0x08
     46e:	ce 01       	movw	r24, r28
     470:	01 96       	adiw	r24, 0x01	; 1
     472:	be 01       	movw	r22, r28
     474:	67 5f       	subi	r22, 0xF7	; 247
     476:	7f 4f       	sbci	r23, 0xFF	; 255
     478:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     47c:	ce 01       	movw	r24, r28
     47e:	05 96       	adiw	r24, 0x05	; 5
     480:	be 01       	movw	r22, r28
     482:	6f 5e       	subi	r22, 0xEF	; 239
     484:	7f 4f       	sbci	r23, 0xFF	; 255
     486:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     48a:	99 85       	ldd	r25, Y+9	; 0x09
     48c:	92 30       	cpi	r25, 0x02	; 2
     48e:	88 f0       	brcs	.+34     	; 0x4b2 <__mulsf3+0x60>
     490:	89 89       	ldd	r24, Y+17	; 0x11
     492:	82 30       	cpi	r24, 0x02	; 2
     494:	c8 f0       	brcs	.+50     	; 0x4c8 <__mulsf3+0x76>
     496:	94 30       	cpi	r25, 0x04	; 4
     498:	19 f4       	brne	.+6      	; 0x4a0 <__mulsf3+0x4e>
     49a:	82 30       	cpi	r24, 0x02	; 2
     49c:	51 f4       	brne	.+20     	; 0x4b2 <__mulsf3+0x60>
     49e:	04 c0       	rjmp	.+8      	; 0x4a8 <__mulsf3+0x56>
     4a0:	84 30       	cpi	r24, 0x04	; 4
     4a2:	29 f4       	brne	.+10     	; 0x4ae <__mulsf3+0x5c>
     4a4:	92 30       	cpi	r25, 0x02	; 2
     4a6:	81 f4       	brne	.+32     	; 0x4c8 <__mulsf3+0x76>
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	91 e0       	ldi	r25, 0x01	; 1
     4ac:	c6 c0       	rjmp	.+396    	; 0x63a <__mulsf3+0x1e8>
     4ae:	92 30       	cpi	r25, 0x02	; 2
     4b0:	49 f4       	brne	.+18     	; 0x4c4 <__mulsf3+0x72>
     4b2:	20 e0       	ldi	r18, 0x00	; 0
     4b4:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b6:	8a 89       	ldd	r24, Y+18	; 0x12
     4b8:	98 13       	cpse	r25, r24
     4ba:	21 e0       	ldi	r18, 0x01	; 1
     4bc:	2a 87       	std	Y+10, r18	; 0x0a
     4be:	ce 01       	movw	r24, r28
     4c0:	09 96       	adiw	r24, 0x09	; 9
     4c2:	bb c0       	rjmp	.+374    	; 0x63a <__mulsf3+0x1e8>
     4c4:	82 30       	cpi	r24, 0x02	; 2
     4c6:	49 f4       	brne	.+18     	; 0x4da <__mulsf3+0x88>
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	9a 85       	ldd	r25, Y+10	; 0x0a
     4cc:	8a 89       	ldd	r24, Y+18	; 0x12
     4ce:	98 13       	cpse	r25, r24
     4d0:	21 e0       	ldi	r18, 0x01	; 1
     4d2:	2a 8b       	std	Y+18, r18	; 0x12
     4d4:	ce 01       	movw	r24, r28
     4d6:	41 96       	adiw	r24, 0x11	; 17
     4d8:	b0 c0       	rjmp	.+352    	; 0x63a <__mulsf3+0x1e8>
     4da:	2d 84       	ldd	r2, Y+13	; 0x0d
     4dc:	3e 84       	ldd	r3, Y+14	; 0x0e
     4de:	4f 84       	ldd	r4, Y+15	; 0x0f
     4e0:	58 88       	ldd	r5, Y+16	; 0x10
     4e2:	6d 88       	ldd	r6, Y+21	; 0x15
     4e4:	7e 88       	ldd	r7, Y+22	; 0x16
     4e6:	8f 88       	ldd	r8, Y+23	; 0x17
     4e8:	98 8c       	ldd	r9, Y+24	; 0x18
     4ea:	ee 24       	eor	r14, r14
     4ec:	ff 24       	eor	r15, r15
     4ee:	87 01       	movw	r16, r14
     4f0:	aa 24       	eor	r10, r10
     4f2:	bb 24       	eor	r11, r11
     4f4:	65 01       	movw	r12, r10
     4f6:	40 e0       	ldi	r20, 0x00	; 0
     4f8:	50 e0       	ldi	r21, 0x00	; 0
     4fa:	60 e0       	ldi	r22, 0x00	; 0
     4fc:	70 e0       	ldi	r23, 0x00	; 0
     4fe:	e0 e0       	ldi	r30, 0x00	; 0
     500:	f0 e0       	ldi	r31, 0x00	; 0
     502:	c1 01       	movw	r24, r2
     504:	81 70       	andi	r24, 0x01	; 1
     506:	90 70       	andi	r25, 0x00	; 0
     508:	89 2b       	or	r24, r25
     50a:	e9 f0       	breq	.+58     	; 0x546 <__mulsf3+0xf4>
     50c:	e6 0c       	add	r14, r6
     50e:	f7 1c       	adc	r15, r7
     510:	08 1d       	adc	r16, r8
     512:	19 1d       	adc	r17, r9
     514:	9a 01       	movw	r18, r20
     516:	ab 01       	movw	r20, r22
     518:	2a 0d       	add	r18, r10
     51a:	3b 1d       	adc	r19, r11
     51c:	4c 1d       	adc	r20, r12
     51e:	5d 1d       	adc	r21, r13
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	a0 e0       	ldi	r26, 0x00	; 0
     526:	b0 e0       	ldi	r27, 0x00	; 0
     528:	e6 14       	cp	r14, r6
     52a:	f7 04       	cpc	r15, r7
     52c:	08 05       	cpc	r16, r8
     52e:	19 05       	cpc	r17, r9
     530:	20 f4       	brcc	.+8      	; 0x53a <__mulsf3+0xe8>
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	a0 e0       	ldi	r26, 0x00	; 0
     538:	b0 e0       	ldi	r27, 0x00	; 0
     53a:	ba 01       	movw	r22, r20
     53c:	a9 01       	movw	r20, r18
     53e:	48 0f       	add	r20, r24
     540:	59 1f       	adc	r21, r25
     542:	6a 1f       	adc	r22, r26
     544:	7b 1f       	adc	r23, r27
     546:	aa 0c       	add	r10, r10
     548:	bb 1c       	adc	r11, r11
     54a:	cc 1c       	adc	r12, r12
     54c:	dd 1c       	adc	r13, r13
     54e:	97 fe       	sbrs	r9, 7
     550:	08 c0       	rjmp	.+16     	; 0x562 <__mulsf3+0x110>
     552:	81 e0       	ldi	r24, 0x01	; 1
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	a0 e0       	ldi	r26, 0x00	; 0
     558:	b0 e0       	ldi	r27, 0x00	; 0
     55a:	a8 2a       	or	r10, r24
     55c:	b9 2a       	or	r11, r25
     55e:	ca 2a       	or	r12, r26
     560:	db 2a       	or	r13, r27
     562:	31 96       	adiw	r30, 0x01	; 1
     564:	e0 32       	cpi	r30, 0x20	; 32
     566:	f1 05       	cpc	r31, r1
     568:	49 f0       	breq	.+18     	; 0x57c <__mulsf3+0x12a>
     56a:	66 0c       	add	r6, r6
     56c:	77 1c       	adc	r7, r7
     56e:	88 1c       	adc	r8, r8
     570:	99 1c       	adc	r9, r9
     572:	56 94       	lsr	r5
     574:	47 94       	ror	r4
     576:	37 94       	ror	r3
     578:	27 94       	ror	r2
     57a:	c3 cf       	rjmp	.-122    	; 0x502 <__mulsf3+0xb0>
     57c:	fa 85       	ldd	r31, Y+10	; 0x0a
     57e:	ea 89       	ldd	r30, Y+18	; 0x12
     580:	2b 89       	ldd	r18, Y+19	; 0x13
     582:	3c 89       	ldd	r19, Y+20	; 0x14
     584:	8b 85       	ldd	r24, Y+11	; 0x0b
     586:	9c 85       	ldd	r25, Y+12	; 0x0c
     588:	28 0f       	add	r18, r24
     58a:	39 1f       	adc	r19, r25
     58c:	2e 5f       	subi	r18, 0xFE	; 254
     58e:	3f 4f       	sbci	r19, 0xFF	; 255
     590:	17 c0       	rjmp	.+46     	; 0x5c0 <__mulsf3+0x16e>
     592:	ca 01       	movw	r24, r20
     594:	81 70       	andi	r24, 0x01	; 1
     596:	90 70       	andi	r25, 0x00	; 0
     598:	89 2b       	or	r24, r25
     59a:	61 f0       	breq	.+24     	; 0x5b4 <__mulsf3+0x162>
     59c:	16 95       	lsr	r17
     59e:	07 95       	ror	r16
     5a0:	f7 94       	ror	r15
     5a2:	e7 94       	ror	r14
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	a0 e0       	ldi	r26, 0x00	; 0
     5aa:	b0 e8       	ldi	r27, 0x80	; 128
     5ac:	e8 2a       	or	r14, r24
     5ae:	f9 2a       	or	r15, r25
     5b0:	0a 2b       	or	r16, r26
     5b2:	1b 2b       	or	r17, r27
     5b4:	76 95       	lsr	r23
     5b6:	67 95       	ror	r22
     5b8:	57 95       	ror	r21
     5ba:	47 95       	ror	r20
     5bc:	2f 5f       	subi	r18, 0xFF	; 255
     5be:	3f 4f       	sbci	r19, 0xFF	; 255
     5c0:	77 fd       	sbrc	r23, 7
     5c2:	e7 cf       	rjmp	.-50     	; 0x592 <__mulsf3+0x140>
     5c4:	0c c0       	rjmp	.+24     	; 0x5de <__mulsf3+0x18c>
     5c6:	44 0f       	add	r20, r20
     5c8:	55 1f       	adc	r21, r21
     5ca:	66 1f       	adc	r22, r22
     5cc:	77 1f       	adc	r23, r23
     5ce:	17 fd       	sbrc	r17, 7
     5d0:	41 60       	ori	r20, 0x01	; 1
     5d2:	ee 0c       	add	r14, r14
     5d4:	ff 1c       	adc	r15, r15
     5d6:	00 1f       	adc	r16, r16
     5d8:	11 1f       	adc	r17, r17
     5da:	21 50       	subi	r18, 0x01	; 1
     5dc:	30 40       	sbci	r19, 0x00	; 0
     5de:	40 30       	cpi	r20, 0x00	; 0
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	59 07       	cpc	r21, r25
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	69 07       	cpc	r22, r25
     5e8:	90 e4       	ldi	r25, 0x40	; 64
     5ea:	79 07       	cpc	r23, r25
     5ec:	60 f3       	brcs	.-40     	; 0x5c6 <__mulsf3+0x174>
     5ee:	2b 8f       	std	Y+27, r18	; 0x1b
     5f0:	3c 8f       	std	Y+28, r19	; 0x1c
     5f2:	db 01       	movw	r26, r22
     5f4:	ca 01       	movw	r24, r20
     5f6:	8f 77       	andi	r24, 0x7F	; 127
     5f8:	90 70       	andi	r25, 0x00	; 0
     5fa:	a0 70       	andi	r26, 0x00	; 0
     5fc:	b0 70       	andi	r27, 0x00	; 0
     5fe:	80 34       	cpi	r24, 0x40	; 64
     600:	91 05       	cpc	r25, r1
     602:	a1 05       	cpc	r26, r1
     604:	b1 05       	cpc	r27, r1
     606:	61 f4       	brne	.+24     	; 0x620 <__mulsf3+0x1ce>
     608:	47 fd       	sbrc	r20, 7
     60a:	0a c0       	rjmp	.+20     	; 0x620 <__mulsf3+0x1ce>
     60c:	e1 14       	cp	r14, r1
     60e:	f1 04       	cpc	r15, r1
     610:	01 05       	cpc	r16, r1
     612:	11 05       	cpc	r17, r1
     614:	29 f0       	breq	.+10     	; 0x620 <__mulsf3+0x1ce>
     616:	40 5c       	subi	r20, 0xC0	; 192
     618:	5f 4f       	sbci	r21, 0xFF	; 255
     61a:	6f 4f       	sbci	r22, 0xFF	; 255
     61c:	7f 4f       	sbci	r23, 0xFF	; 255
     61e:	40 78       	andi	r20, 0x80	; 128
     620:	1a 8e       	std	Y+26, r1	; 0x1a
     622:	fe 17       	cp	r31, r30
     624:	11 f0       	breq	.+4      	; 0x62a <__mulsf3+0x1d8>
     626:	81 e0       	ldi	r24, 0x01	; 1
     628:	8a 8f       	std	Y+26, r24	; 0x1a
     62a:	4d 8f       	std	Y+29, r20	; 0x1d
     62c:	5e 8f       	std	Y+30, r21	; 0x1e
     62e:	6f 8f       	std	Y+31, r22	; 0x1f
     630:	78 a3       	std	Y+32, r23	; 0x20
     632:	83 e0       	ldi	r24, 0x03	; 3
     634:	89 8f       	std	Y+25, r24	; 0x19
     636:	ce 01       	movw	r24, r28
     638:	49 96       	adiw	r24, 0x19	; 25
     63a:	0e 94 07 04 	call	0x80e	; 0x80e <__pack_f>
     63e:	a0 96       	adiw	r28, 0x20	; 32
     640:	e2 e1       	ldi	r30, 0x12	; 18
     642:	0c 94 08 0a 	jmp	0x1410	; 0x1410 <__epilogue_restores__>

00000646 <__gtsf2>:
     646:	a8 e1       	ldi	r26, 0x18	; 24
     648:	b0 e0       	ldi	r27, 0x00	; 0
     64a:	e9 e2       	ldi	r30, 0x29	; 41
     64c:	f3 e0       	ldi	r31, 0x03	; 3
     64e:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__prologue_saves__+0x18>
     652:	69 83       	std	Y+1, r22	; 0x01
     654:	7a 83       	std	Y+2, r23	; 0x02
     656:	8b 83       	std	Y+3, r24	; 0x03
     658:	9c 83       	std	Y+4, r25	; 0x04
     65a:	2d 83       	std	Y+5, r18	; 0x05
     65c:	3e 83       	std	Y+6, r19	; 0x06
     65e:	4f 83       	std	Y+7, r20	; 0x07
     660:	58 87       	std	Y+8, r21	; 0x08
     662:	89 e0       	ldi	r24, 0x09	; 9
     664:	e8 2e       	mov	r14, r24
     666:	f1 2c       	mov	r15, r1
     668:	ec 0e       	add	r14, r28
     66a:	fd 1e       	adc	r15, r29
     66c:	ce 01       	movw	r24, r28
     66e:	01 96       	adiw	r24, 0x01	; 1
     670:	b7 01       	movw	r22, r14
     672:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     676:	8e 01       	movw	r16, r28
     678:	0f 5e       	subi	r16, 0xEF	; 239
     67a:	1f 4f       	sbci	r17, 0xFF	; 255
     67c:	ce 01       	movw	r24, r28
     67e:	05 96       	adiw	r24, 0x05	; 5
     680:	b8 01       	movw	r22, r16
     682:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     686:	89 85       	ldd	r24, Y+9	; 0x09
     688:	82 30       	cpi	r24, 0x02	; 2
     68a:	40 f0       	brcs	.+16     	; 0x69c <__gtsf2+0x56>
     68c:	89 89       	ldd	r24, Y+17	; 0x11
     68e:	82 30       	cpi	r24, 0x02	; 2
     690:	28 f0       	brcs	.+10     	; 0x69c <__gtsf2+0x56>
     692:	c7 01       	movw	r24, r14
     694:	b8 01       	movw	r22, r16
     696:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__fpcmp_parts_f>
     69a:	01 c0       	rjmp	.+2      	; 0x69e <__gtsf2+0x58>
     69c:	8f ef       	ldi	r24, 0xFF	; 255
     69e:	68 96       	adiw	r28, 0x18	; 24
     6a0:	e6 e0       	ldi	r30, 0x06	; 6
     6a2:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__epilogue_restores__+0x18>

000006a6 <__gesf2>:
     6a6:	a8 e1       	ldi	r26, 0x18	; 24
     6a8:	b0 e0       	ldi	r27, 0x00	; 0
     6aa:	e9 e5       	ldi	r30, 0x59	; 89
     6ac:	f3 e0       	ldi	r31, 0x03	; 3
     6ae:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__prologue_saves__+0x18>
     6b2:	69 83       	std	Y+1, r22	; 0x01
     6b4:	7a 83       	std	Y+2, r23	; 0x02
     6b6:	8b 83       	std	Y+3, r24	; 0x03
     6b8:	9c 83       	std	Y+4, r25	; 0x04
     6ba:	2d 83       	std	Y+5, r18	; 0x05
     6bc:	3e 83       	std	Y+6, r19	; 0x06
     6be:	4f 83       	std	Y+7, r20	; 0x07
     6c0:	58 87       	std	Y+8, r21	; 0x08
     6c2:	89 e0       	ldi	r24, 0x09	; 9
     6c4:	e8 2e       	mov	r14, r24
     6c6:	f1 2c       	mov	r15, r1
     6c8:	ec 0e       	add	r14, r28
     6ca:	fd 1e       	adc	r15, r29
     6cc:	ce 01       	movw	r24, r28
     6ce:	01 96       	adiw	r24, 0x01	; 1
     6d0:	b7 01       	movw	r22, r14
     6d2:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     6d6:	8e 01       	movw	r16, r28
     6d8:	0f 5e       	subi	r16, 0xEF	; 239
     6da:	1f 4f       	sbci	r17, 0xFF	; 255
     6dc:	ce 01       	movw	r24, r28
     6de:	05 96       	adiw	r24, 0x05	; 5
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     6e6:	89 85       	ldd	r24, Y+9	; 0x09
     6e8:	82 30       	cpi	r24, 0x02	; 2
     6ea:	40 f0       	brcs	.+16     	; 0x6fc <__gesf2+0x56>
     6ec:	89 89       	ldd	r24, Y+17	; 0x11
     6ee:	82 30       	cpi	r24, 0x02	; 2
     6f0:	28 f0       	brcs	.+10     	; 0x6fc <__gesf2+0x56>
     6f2:	c7 01       	movw	r24, r14
     6f4:	b8 01       	movw	r22, r16
     6f6:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__fpcmp_parts_f>
     6fa:	01 c0       	rjmp	.+2      	; 0x6fe <__gesf2+0x58>
     6fc:	8f ef       	ldi	r24, 0xFF	; 255
     6fe:	68 96       	adiw	r28, 0x18	; 24
     700:	e6 e0       	ldi	r30, 0x06	; 6
     702:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__epilogue_restores__+0x18>

00000706 <__ltsf2>:
     706:	a8 e1       	ldi	r26, 0x18	; 24
     708:	b0 e0       	ldi	r27, 0x00	; 0
     70a:	e9 e8       	ldi	r30, 0x89	; 137
     70c:	f3 e0       	ldi	r31, 0x03	; 3
     70e:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__prologue_saves__+0x18>
     712:	69 83       	std	Y+1, r22	; 0x01
     714:	7a 83       	std	Y+2, r23	; 0x02
     716:	8b 83       	std	Y+3, r24	; 0x03
     718:	9c 83       	std	Y+4, r25	; 0x04
     71a:	2d 83       	std	Y+5, r18	; 0x05
     71c:	3e 83       	std	Y+6, r19	; 0x06
     71e:	4f 83       	std	Y+7, r20	; 0x07
     720:	58 87       	std	Y+8, r21	; 0x08
     722:	89 e0       	ldi	r24, 0x09	; 9
     724:	e8 2e       	mov	r14, r24
     726:	f1 2c       	mov	r15, r1
     728:	ec 0e       	add	r14, r28
     72a:	fd 1e       	adc	r15, r29
     72c:	ce 01       	movw	r24, r28
     72e:	01 96       	adiw	r24, 0x01	; 1
     730:	b7 01       	movw	r22, r14
     732:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     736:	8e 01       	movw	r16, r28
     738:	0f 5e       	subi	r16, 0xEF	; 239
     73a:	1f 4f       	sbci	r17, 0xFF	; 255
     73c:	ce 01       	movw	r24, r28
     73e:	05 96       	adiw	r24, 0x05	; 5
     740:	b8 01       	movw	r22, r16
     742:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     746:	89 85       	ldd	r24, Y+9	; 0x09
     748:	82 30       	cpi	r24, 0x02	; 2
     74a:	40 f0       	brcs	.+16     	; 0x75c <__ltsf2+0x56>
     74c:	89 89       	ldd	r24, Y+17	; 0x11
     74e:	82 30       	cpi	r24, 0x02	; 2
     750:	28 f0       	brcs	.+10     	; 0x75c <__ltsf2+0x56>
     752:	c7 01       	movw	r24, r14
     754:	b8 01       	movw	r22, r16
     756:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__fpcmp_parts_f>
     75a:	01 c0       	rjmp	.+2      	; 0x75e <__ltsf2+0x58>
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	68 96       	adiw	r28, 0x18	; 24
     760:	e6 e0       	ldi	r30, 0x06	; 6
     762:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__epilogue_restores__+0x18>

00000766 <__fixsfsi>:
     766:	ac e0       	ldi	r26, 0x0C	; 12
     768:	b0 e0       	ldi	r27, 0x00	; 0
     76a:	e9 eb       	ldi	r30, 0xB9	; 185
     76c:	f3 e0       	ldi	r31, 0x03	; 3
     76e:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__prologue_saves__+0x20>
     772:	69 83       	std	Y+1, r22	; 0x01
     774:	7a 83       	std	Y+2, r23	; 0x02
     776:	8b 83       	std	Y+3, r24	; 0x03
     778:	9c 83       	std	Y+4, r25	; 0x04
     77a:	ce 01       	movw	r24, r28
     77c:	01 96       	adiw	r24, 0x01	; 1
     77e:	be 01       	movw	r22, r28
     780:	6b 5f       	subi	r22, 0xFB	; 251
     782:	7f 4f       	sbci	r23, 0xFF	; 255
     784:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__unpack_f>
     788:	8d 81       	ldd	r24, Y+5	; 0x05
     78a:	82 30       	cpi	r24, 0x02	; 2
     78c:	61 f1       	breq	.+88     	; 0x7e6 <__fixsfsi+0x80>
     78e:	82 30       	cpi	r24, 0x02	; 2
     790:	50 f1       	brcs	.+84     	; 0x7e6 <__fixsfsi+0x80>
     792:	84 30       	cpi	r24, 0x04	; 4
     794:	21 f4       	brne	.+8      	; 0x79e <__fixsfsi+0x38>
     796:	8e 81       	ldd	r24, Y+6	; 0x06
     798:	88 23       	and	r24, r24
     79a:	51 f1       	breq	.+84     	; 0x7f0 <__fixsfsi+0x8a>
     79c:	2e c0       	rjmp	.+92     	; 0x7fa <__fixsfsi+0x94>
     79e:	2f 81       	ldd	r18, Y+7	; 0x07
     7a0:	38 85       	ldd	r19, Y+8	; 0x08
     7a2:	37 fd       	sbrc	r19, 7
     7a4:	20 c0       	rjmp	.+64     	; 0x7e6 <__fixsfsi+0x80>
     7a6:	6e 81       	ldd	r22, Y+6	; 0x06
     7a8:	2f 31       	cpi	r18, 0x1F	; 31
     7aa:	31 05       	cpc	r19, r1
     7ac:	1c f0       	brlt	.+6      	; 0x7b4 <__fixsfsi+0x4e>
     7ae:	66 23       	and	r22, r22
     7b0:	f9 f0       	breq	.+62     	; 0x7f0 <__fixsfsi+0x8a>
     7b2:	23 c0       	rjmp	.+70     	; 0x7fa <__fixsfsi+0x94>
     7b4:	8e e1       	ldi	r24, 0x1E	; 30
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	82 1b       	sub	r24, r18
     7ba:	93 0b       	sbc	r25, r19
     7bc:	29 85       	ldd	r18, Y+9	; 0x09
     7be:	3a 85       	ldd	r19, Y+10	; 0x0a
     7c0:	4b 85       	ldd	r20, Y+11	; 0x0b
     7c2:	5c 85       	ldd	r21, Y+12	; 0x0c
     7c4:	04 c0       	rjmp	.+8      	; 0x7ce <__fixsfsi+0x68>
     7c6:	56 95       	lsr	r21
     7c8:	47 95       	ror	r20
     7ca:	37 95       	ror	r19
     7cc:	27 95       	ror	r18
     7ce:	8a 95       	dec	r24
     7d0:	d2 f7       	brpl	.-12     	; 0x7c6 <__fixsfsi+0x60>
     7d2:	66 23       	and	r22, r22
     7d4:	b1 f0       	breq	.+44     	; 0x802 <__fixsfsi+0x9c>
     7d6:	50 95       	com	r21
     7d8:	40 95       	com	r20
     7da:	30 95       	com	r19
     7dc:	21 95       	neg	r18
     7de:	3f 4f       	sbci	r19, 0xFF	; 255
     7e0:	4f 4f       	sbci	r20, 0xFF	; 255
     7e2:	5f 4f       	sbci	r21, 0xFF	; 255
     7e4:	0e c0       	rjmp	.+28     	; 0x802 <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e0       	ldi	r21, 0x00	; 0
     7ee:	09 c0       	rjmp	.+18     	; 0x802 <__fixsfsi+0x9c>
     7f0:	2f ef       	ldi	r18, 0xFF	; 255
     7f2:	3f ef       	ldi	r19, 0xFF	; 255
     7f4:	4f ef       	ldi	r20, 0xFF	; 255
     7f6:	5f e7       	ldi	r21, 0x7F	; 127
     7f8:	04 c0       	rjmp	.+8      	; 0x802 <__fixsfsi+0x9c>
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	40 e0       	ldi	r20, 0x00	; 0
     800:	50 e8       	ldi	r21, 0x80	; 128
     802:	b9 01       	movw	r22, r18
     804:	ca 01       	movw	r24, r20
     806:	2c 96       	adiw	r28, 0x0c	; 12
     808:	e2 e0       	ldi	r30, 0x02	; 2
     80a:	0c 94 18 0a 	jmp	0x1430	; 0x1430 <__epilogue_restores__+0x20>

0000080e <__pack_f>:
     80e:	df 92       	push	r13
     810:	ef 92       	push	r14
     812:	ff 92       	push	r15
     814:	0f 93       	push	r16
     816:	1f 93       	push	r17
     818:	fc 01       	movw	r30, r24
     81a:	e4 80       	ldd	r14, Z+4	; 0x04
     81c:	f5 80       	ldd	r15, Z+5	; 0x05
     81e:	06 81       	ldd	r16, Z+6	; 0x06
     820:	17 81       	ldd	r17, Z+7	; 0x07
     822:	d1 80       	ldd	r13, Z+1	; 0x01
     824:	80 81       	ld	r24, Z
     826:	82 30       	cpi	r24, 0x02	; 2
     828:	48 f4       	brcc	.+18     	; 0x83c <__pack_f+0x2e>
     82a:	80 e0       	ldi	r24, 0x00	; 0
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	a0 e1       	ldi	r26, 0x10	; 16
     830:	b0 e0       	ldi	r27, 0x00	; 0
     832:	e8 2a       	or	r14, r24
     834:	f9 2a       	or	r15, r25
     836:	0a 2b       	or	r16, r26
     838:	1b 2b       	or	r17, r27
     83a:	a5 c0       	rjmp	.+330    	; 0x986 <__stack+0x87>
     83c:	84 30       	cpi	r24, 0x04	; 4
     83e:	09 f4       	brne	.+2      	; 0x842 <__pack_f+0x34>
     840:	9f c0       	rjmp	.+318    	; 0x980 <__stack+0x81>
     842:	82 30       	cpi	r24, 0x02	; 2
     844:	21 f4       	brne	.+8      	; 0x84e <__pack_f+0x40>
     846:	ee 24       	eor	r14, r14
     848:	ff 24       	eor	r15, r15
     84a:	87 01       	movw	r16, r14
     84c:	05 c0       	rjmp	.+10     	; 0x858 <__pack_f+0x4a>
     84e:	e1 14       	cp	r14, r1
     850:	f1 04       	cpc	r15, r1
     852:	01 05       	cpc	r16, r1
     854:	11 05       	cpc	r17, r1
     856:	19 f4       	brne	.+6      	; 0x85e <__pack_f+0x50>
     858:	e0 e0       	ldi	r30, 0x00	; 0
     85a:	f0 e0       	ldi	r31, 0x00	; 0
     85c:	96 c0       	rjmp	.+300    	; 0x98a <__stack+0x8b>
     85e:	62 81       	ldd	r22, Z+2	; 0x02
     860:	73 81       	ldd	r23, Z+3	; 0x03
     862:	9f ef       	ldi	r25, 0xFF	; 255
     864:	62 38       	cpi	r22, 0x82	; 130
     866:	79 07       	cpc	r23, r25
     868:	0c f0       	brlt	.+2      	; 0x86c <__pack_f+0x5e>
     86a:	5b c0       	rjmp	.+182    	; 0x922 <__stack+0x23>
     86c:	22 e8       	ldi	r18, 0x82	; 130
     86e:	3f ef       	ldi	r19, 0xFF	; 255
     870:	26 1b       	sub	r18, r22
     872:	37 0b       	sbc	r19, r23
     874:	2a 31       	cpi	r18, 0x1A	; 26
     876:	31 05       	cpc	r19, r1
     878:	2c f0       	brlt	.+10     	; 0x884 <__pack_f+0x76>
     87a:	20 e0       	ldi	r18, 0x00	; 0
     87c:	30 e0       	ldi	r19, 0x00	; 0
     87e:	40 e0       	ldi	r20, 0x00	; 0
     880:	50 e0       	ldi	r21, 0x00	; 0
     882:	2a c0       	rjmp	.+84     	; 0x8d8 <__pack_f+0xca>
     884:	b8 01       	movw	r22, r16
     886:	a7 01       	movw	r20, r14
     888:	02 2e       	mov	r0, r18
     88a:	04 c0       	rjmp	.+8      	; 0x894 <__pack_f+0x86>
     88c:	76 95       	lsr	r23
     88e:	67 95       	ror	r22
     890:	57 95       	ror	r21
     892:	47 95       	ror	r20
     894:	0a 94       	dec	r0
     896:	d2 f7       	brpl	.-12     	; 0x88c <__pack_f+0x7e>
     898:	81 e0       	ldi	r24, 0x01	; 1
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	a0 e0       	ldi	r26, 0x00	; 0
     89e:	b0 e0       	ldi	r27, 0x00	; 0
     8a0:	04 c0       	rjmp	.+8      	; 0x8aa <__pack_f+0x9c>
     8a2:	88 0f       	add	r24, r24
     8a4:	99 1f       	adc	r25, r25
     8a6:	aa 1f       	adc	r26, r26
     8a8:	bb 1f       	adc	r27, r27
     8aa:	2a 95       	dec	r18
     8ac:	d2 f7       	brpl	.-12     	; 0x8a2 <__pack_f+0x94>
     8ae:	01 97       	sbiw	r24, 0x01	; 1
     8b0:	a1 09       	sbc	r26, r1
     8b2:	b1 09       	sbc	r27, r1
     8b4:	8e 21       	and	r24, r14
     8b6:	9f 21       	and	r25, r15
     8b8:	a0 23       	and	r26, r16
     8ba:	b1 23       	and	r27, r17
     8bc:	00 97       	sbiw	r24, 0x00	; 0
     8be:	a1 05       	cpc	r26, r1
     8c0:	b1 05       	cpc	r27, r1
     8c2:	21 f0       	breq	.+8      	; 0x8cc <__pack_f+0xbe>
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	a0 e0       	ldi	r26, 0x00	; 0
     8ca:	b0 e0       	ldi	r27, 0x00	; 0
     8cc:	9a 01       	movw	r18, r20
     8ce:	ab 01       	movw	r20, r22
     8d0:	28 2b       	or	r18, r24
     8d2:	39 2b       	or	r19, r25
     8d4:	4a 2b       	or	r20, r26
     8d6:	5b 2b       	or	r21, r27
     8d8:	da 01       	movw	r26, r20
     8da:	c9 01       	movw	r24, r18
     8dc:	8f 77       	andi	r24, 0x7F	; 127
     8de:	90 70       	andi	r25, 0x00	; 0
     8e0:	a0 70       	andi	r26, 0x00	; 0
     8e2:	b0 70       	andi	r27, 0x00	; 0
     8e4:	80 34       	cpi	r24, 0x40	; 64
     8e6:	91 05       	cpc	r25, r1
     8e8:	a1 05       	cpc	r26, r1
     8ea:	b1 05       	cpc	r27, r1
     8ec:	39 f4       	brne	.+14     	; 0x8fc <__pack_f+0xee>
     8ee:	27 ff       	sbrs	r18, 7
     8f0:	09 c0       	rjmp	.+18     	; 0x904 <__stack+0x5>
     8f2:	20 5c       	subi	r18, 0xC0	; 192
     8f4:	3f 4f       	sbci	r19, 0xFF	; 255
     8f6:	4f 4f       	sbci	r20, 0xFF	; 255
     8f8:	5f 4f       	sbci	r21, 0xFF	; 255
     8fa:	04 c0       	rjmp	.+8      	; 0x904 <__stack+0x5>
     8fc:	21 5c       	subi	r18, 0xC1	; 193
     8fe:	3f 4f       	sbci	r19, 0xFF	; 255
     900:	4f 4f       	sbci	r20, 0xFF	; 255
     902:	5f 4f       	sbci	r21, 0xFF	; 255
     904:	e0 e0       	ldi	r30, 0x00	; 0
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	20 30       	cpi	r18, 0x00	; 0
     90a:	a0 e0       	ldi	r26, 0x00	; 0
     90c:	3a 07       	cpc	r19, r26
     90e:	a0 e0       	ldi	r26, 0x00	; 0
     910:	4a 07       	cpc	r20, r26
     912:	a0 e4       	ldi	r26, 0x40	; 64
     914:	5a 07       	cpc	r21, r26
     916:	10 f0       	brcs	.+4      	; 0x91c <__stack+0x1d>
     918:	e1 e0       	ldi	r30, 0x01	; 1
     91a:	f0 e0       	ldi	r31, 0x00	; 0
     91c:	79 01       	movw	r14, r18
     91e:	8a 01       	movw	r16, r20
     920:	27 c0       	rjmp	.+78     	; 0x970 <__stack+0x71>
     922:	60 38       	cpi	r22, 0x80	; 128
     924:	71 05       	cpc	r23, r1
     926:	64 f5       	brge	.+88     	; 0x980 <__stack+0x81>
     928:	fb 01       	movw	r30, r22
     92a:	e1 58       	subi	r30, 0x81	; 129
     92c:	ff 4f       	sbci	r31, 0xFF	; 255
     92e:	d8 01       	movw	r26, r16
     930:	c7 01       	movw	r24, r14
     932:	8f 77       	andi	r24, 0x7F	; 127
     934:	90 70       	andi	r25, 0x00	; 0
     936:	a0 70       	andi	r26, 0x00	; 0
     938:	b0 70       	andi	r27, 0x00	; 0
     93a:	80 34       	cpi	r24, 0x40	; 64
     93c:	91 05       	cpc	r25, r1
     93e:	a1 05       	cpc	r26, r1
     940:	b1 05       	cpc	r27, r1
     942:	39 f4       	brne	.+14     	; 0x952 <__stack+0x53>
     944:	e7 fe       	sbrs	r14, 7
     946:	0d c0       	rjmp	.+26     	; 0x962 <__stack+0x63>
     948:	80 e4       	ldi	r24, 0x40	; 64
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	a0 e0       	ldi	r26, 0x00	; 0
     94e:	b0 e0       	ldi	r27, 0x00	; 0
     950:	04 c0       	rjmp	.+8      	; 0x95a <__stack+0x5b>
     952:	8f e3       	ldi	r24, 0x3F	; 63
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	a0 e0       	ldi	r26, 0x00	; 0
     958:	b0 e0       	ldi	r27, 0x00	; 0
     95a:	e8 0e       	add	r14, r24
     95c:	f9 1e       	adc	r15, r25
     95e:	0a 1f       	adc	r16, r26
     960:	1b 1f       	adc	r17, r27
     962:	17 ff       	sbrs	r17, 7
     964:	05 c0       	rjmp	.+10     	; 0x970 <__stack+0x71>
     966:	16 95       	lsr	r17
     968:	07 95       	ror	r16
     96a:	f7 94       	ror	r15
     96c:	e7 94       	ror	r14
     96e:	31 96       	adiw	r30, 0x01	; 1
     970:	87 e0       	ldi	r24, 0x07	; 7
     972:	16 95       	lsr	r17
     974:	07 95       	ror	r16
     976:	f7 94       	ror	r15
     978:	e7 94       	ror	r14
     97a:	8a 95       	dec	r24
     97c:	d1 f7       	brne	.-12     	; 0x972 <__stack+0x73>
     97e:	05 c0       	rjmp	.+10     	; 0x98a <__stack+0x8b>
     980:	ee 24       	eor	r14, r14
     982:	ff 24       	eor	r15, r15
     984:	87 01       	movw	r16, r14
     986:	ef ef       	ldi	r30, 0xFF	; 255
     988:	f0 e0       	ldi	r31, 0x00	; 0
     98a:	6e 2f       	mov	r22, r30
     98c:	67 95       	ror	r22
     98e:	66 27       	eor	r22, r22
     990:	67 95       	ror	r22
     992:	90 2f       	mov	r25, r16
     994:	9f 77       	andi	r25, 0x7F	; 127
     996:	d7 94       	ror	r13
     998:	dd 24       	eor	r13, r13
     99a:	d7 94       	ror	r13
     99c:	8e 2f       	mov	r24, r30
     99e:	86 95       	lsr	r24
     9a0:	49 2f       	mov	r20, r25
     9a2:	46 2b       	or	r20, r22
     9a4:	58 2f       	mov	r21, r24
     9a6:	5d 29       	or	r21, r13
     9a8:	b7 01       	movw	r22, r14
     9aa:	ca 01       	movw	r24, r20
     9ac:	1f 91       	pop	r17
     9ae:	0f 91       	pop	r16
     9b0:	ff 90       	pop	r15
     9b2:	ef 90       	pop	r14
     9b4:	df 90       	pop	r13
     9b6:	08 95       	ret

000009b8 <__unpack_f>:
     9b8:	fc 01       	movw	r30, r24
     9ba:	db 01       	movw	r26, r22
     9bc:	40 81       	ld	r20, Z
     9be:	51 81       	ldd	r21, Z+1	; 0x01
     9c0:	22 81       	ldd	r18, Z+2	; 0x02
     9c2:	62 2f       	mov	r22, r18
     9c4:	6f 77       	andi	r22, 0x7F	; 127
     9c6:	70 e0       	ldi	r23, 0x00	; 0
     9c8:	22 1f       	adc	r18, r18
     9ca:	22 27       	eor	r18, r18
     9cc:	22 1f       	adc	r18, r18
     9ce:	93 81       	ldd	r25, Z+3	; 0x03
     9d0:	89 2f       	mov	r24, r25
     9d2:	88 0f       	add	r24, r24
     9d4:	82 2b       	or	r24, r18
     9d6:	28 2f       	mov	r18, r24
     9d8:	30 e0       	ldi	r19, 0x00	; 0
     9da:	99 1f       	adc	r25, r25
     9dc:	99 27       	eor	r25, r25
     9de:	99 1f       	adc	r25, r25
     9e0:	11 96       	adiw	r26, 0x01	; 1
     9e2:	9c 93       	st	X, r25
     9e4:	11 97       	sbiw	r26, 0x01	; 1
     9e6:	21 15       	cp	r18, r1
     9e8:	31 05       	cpc	r19, r1
     9ea:	a9 f5       	brne	.+106    	; 0xa56 <__unpack_f+0x9e>
     9ec:	41 15       	cp	r20, r1
     9ee:	51 05       	cpc	r21, r1
     9f0:	61 05       	cpc	r22, r1
     9f2:	71 05       	cpc	r23, r1
     9f4:	11 f4       	brne	.+4      	; 0x9fa <__unpack_f+0x42>
     9f6:	82 e0       	ldi	r24, 0x02	; 2
     9f8:	37 c0       	rjmp	.+110    	; 0xa68 <__unpack_f+0xb0>
     9fa:	82 e8       	ldi	r24, 0x82	; 130
     9fc:	9f ef       	ldi	r25, 0xFF	; 255
     9fe:	13 96       	adiw	r26, 0x03	; 3
     a00:	9c 93       	st	X, r25
     a02:	8e 93       	st	-X, r24
     a04:	12 97       	sbiw	r26, 0x02	; 2
     a06:	9a 01       	movw	r18, r20
     a08:	ab 01       	movw	r20, r22
     a0a:	67 e0       	ldi	r22, 0x07	; 7
     a0c:	22 0f       	add	r18, r18
     a0e:	33 1f       	adc	r19, r19
     a10:	44 1f       	adc	r20, r20
     a12:	55 1f       	adc	r21, r21
     a14:	6a 95       	dec	r22
     a16:	d1 f7       	brne	.-12     	; 0xa0c <__unpack_f+0x54>
     a18:	83 e0       	ldi	r24, 0x03	; 3
     a1a:	8c 93       	st	X, r24
     a1c:	0d c0       	rjmp	.+26     	; 0xa38 <__unpack_f+0x80>
     a1e:	22 0f       	add	r18, r18
     a20:	33 1f       	adc	r19, r19
     a22:	44 1f       	adc	r20, r20
     a24:	55 1f       	adc	r21, r21
     a26:	12 96       	adiw	r26, 0x02	; 2
     a28:	8d 91       	ld	r24, X+
     a2a:	9c 91       	ld	r25, X
     a2c:	13 97       	sbiw	r26, 0x03	; 3
     a2e:	01 97       	sbiw	r24, 0x01	; 1
     a30:	13 96       	adiw	r26, 0x03	; 3
     a32:	9c 93       	st	X, r25
     a34:	8e 93       	st	-X, r24
     a36:	12 97       	sbiw	r26, 0x02	; 2
     a38:	20 30       	cpi	r18, 0x00	; 0
     a3a:	80 e0       	ldi	r24, 0x00	; 0
     a3c:	38 07       	cpc	r19, r24
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	48 07       	cpc	r20, r24
     a42:	80 e4       	ldi	r24, 0x40	; 64
     a44:	58 07       	cpc	r21, r24
     a46:	58 f3       	brcs	.-42     	; 0xa1e <__unpack_f+0x66>
     a48:	14 96       	adiw	r26, 0x04	; 4
     a4a:	2d 93       	st	X+, r18
     a4c:	3d 93       	st	X+, r19
     a4e:	4d 93       	st	X+, r20
     a50:	5c 93       	st	X, r21
     a52:	17 97       	sbiw	r26, 0x07	; 7
     a54:	08 95       	ret
     a56:	2f 3f       	cpi	r18, 0xFF	; 255
     a58:	31 05       	cpc	r19, r1
     a5a:	79 f4       	brne	.+30     	; 0xa7a <__unpack_f+0xc2>
     a5c:	41 15       	cp	r20, r1
     a5e:	51 05       	cpc	r21, r1
     a60:	61 05       	cpc	r22, r1
     a62:	71 05       	cpc	r23, r1
     a64:	19 f4       	brne	.+6      	; 0xa6c <__unpack_f+0xb4>
     a66:	84 e0       	ldi	r24, 0x04	; 4
     a68:	8c 93       	st	X, r24
     a6a:	08 95       	ret
     a6c:	64 ff       	sbrs	r22, 4
     a6e:	03 c0       	rjmp	.+6      	; 0xa76 <__unpack_f+0xbe>
     a70:	81 e0       	ldi	r24, 0x01	; 1
     a72:	8c 93       	st	X, r24
     a74:	12 c0       	rjmp	.+36     	; 0xa9a <__unpack_f+0xe2>
     a76:	1c 92       	st	X, r1
     a78:	10 c0       	rjmp	.+32     	; 0xa9a <__unpack_f+0xe2>
     a7a:	2f 57       	subi	r18, 0x7F	; 127
     a7c:	30 40       	sbci	r19, 0x00	; 0
     a7e:	13 96       	adiw	r26, 0x03	; 3
     a80:	3c 93       	st	X, r19
     a82:	2e 93       	st	-X, r18
     a84:	12 97       	sbiw	r26, 0x02	; 2
     a86:	83 e0       	ldi	r24, 0x03	; 3
     a88:	8c 93       	st	X, r24
     a8a:	87 e0       	ldi	r24, 0x07	; 7
     a8c:	44 0f       	add	r20, r20
     a8e:	55 1f       	adc	r21, r21
     a90:	66 1f       	adc	r22, r22
     a92:	77 1f       	adc	r23, r23
     a94:	8a 95       	dec	r24
     a96:	d1 f7       	brne	.-12     	; 0xa8c <__unpack_f+0xd4>
     a98:	70 64       	ori	r23, 0x40	; 64
     a9a:	14 96       	adiw	r26, 0x04	; 4
     a9c:	4d 93       	st	X+, r20
     a9e:	5d 93       	st	X+, r21
     aa0:	6d 93       	st	X+, r22
     aa2:	7c 93       	st	X, r23
     aa4:	17 97       	sbiw	r26, 0x07	; 7
     aa6:	08 95       	ret

00000aa8 <__fpcmp_parts_f>:
     aa8:	1f 93       	push	r17
     aaa:	dc 01       	movw	r26, r24
     aac:	fb 01       	movw	r30, r22
     aae:	9c 91       	ld	r25, X
     ab0:	92 30       	cpi	r25, 0x02	; 2
     ab2:	08 f4       	brcc	.+2      	; 0xab6 <__fpcmp_parts_f+0xe>
     ab4:	47 c0       	rjmp	.+142    	; 0xb44 <__fpcmp_parts_f+0x9c>
     ab6:	80 81       	ld	r24, Z
     ab8:	82 30       	cpi	r24, 0x02	; 2
     aba:	08 f4       	brcc	.+2      	; 0xabe <__fpcmp_parts_f+0x16>
     abc:	43 c0       	rjmp	.+134    	; 0xb44 <__fpcmp_parts_f+0x9c>
     abe:	94 30       	cpi	r25, 0x04	; 4
     ac0:	51 f4       	brne	.+20     	; 0xad6 <__fpcmp_parts_f+0x2e>
     ac2:	11 96       	adiw	r26, 0x01	; 1
     ac4:	1c 91       	ld	r17, X
     ac6:	84 30       	cpi	r24, 0x04	; 4
     ac8:	99 f5       	brne	.+102    	; 0xb30 <__fpcmp_parts_f+0x88>
     aca:	81 81       	ldd	r24, Z+1	; 0x01
     acc:	68 2f       	mov	r22, r24
     ace:	70 e0       	ldi	r23, 0x00	; 0
     ad0:	61 1b       	sub	r22, r17
     ad2:	71 09       	sbc	r23, r1
     ad4:	3f c0       	rjmp	.+126    	; 0xb54 <__fpcmp_parts_f+0xac>
     ad6:	84 30       	cpi	r24, 0x04	; 4
     ad8:	21 f0       	breq	.+8      	; 0xae2 <__fpcmp_parts_f+0x3a>
     ada:	92 30       	cpi	r25, 0x02	; 2
     adc:	31 f4       	brne	.+12     	; 0xaea <__fpcmp_parts_f+0x42>
     ade:	82 30       	cpi	r24, 0x02	; 2
     ae0:	b9 f1       	breq	.+110    	; 0xb50 <__fpcmp_parts_f+0xa8>
     ae2:	81 81       	ldd	r24, Z+1	; 0x01
     ae4:	88 23       	and	r24, r24
     ae6:	89 f1       	breq	.+98     	; 0xb4a <__fpcmp_parts_f+0xa2>
     ae8:	2d c0       	rjmp	.+90     	; 0xb44 <__fpcmp_parts_f+0x9c>
     aea:	11 96       	adiw	r26, 0x01	; 1
     aec:	1c 91       	ld	r17, X
     aee:	11 97       	sbiw	r26, 0x01	; 1
     af0:	82 30       	cpi	r24, 0x02	; 2
     af2:	f1 f0       	breq	.+60     	; 0xb30 <__fpcmp_parts_f+0x88>
     af4:	81 81       	ldd	r24, Z+1	; 0x01
     af6:	18 17       	cp	r17, r24
     af8:	d9 f4       	brne	.+54     	; 0xb30 <__fpcmp_parts_f+0x88>
     afa:	12 96       	adiw	r26, 0x02	; 2
     afc:	2d 91       	ld	r18, X+
     afe:	3c 91       	ld	r19, X
     b00:	13 97       	sbiw	r26, 0x03	; 3
     b02:	82 81       	ldd	r24, Z+2	; 0x02
     b04:	93 81       	ldd	r25, Z+3	; 0x03
     b06:	82 17       	cp	r24, r18
     b08:	93 07       	cpc	r25, r19
     b0a:	94 f0       	brlt	.+36     	; 0xb30 <__fpcmp_parts_f+0x88>
     b0c:	28 17       	cp	r18, r24
     b0e:	39 07       	cpc	r19, r25
     b10:	bc f0       	brlt	.+46     	; 0xb40 <__fpcmp_parts_f+0x98>
     b12:	14 96       	adiw	r26, 0x04	; 4
     b14:	8d 91       	ld	r24, X+
     b16:	9d 91       	ld	r25, X+
     b18:	0d 90       	ld	r0, X+
     b1a:	bc 91       	ld	r27, X
     b1c:	a0 2d       	mov	r26, r0
     b1e:	24 81       	ldd	r18, Z+4	; 0x04
     b20:	35 81       	ldd	r19, Z+5	; 0x05
     b22:	46 81       	ldd	r20, Z+6	; 0x06
     b24:	57 81       	ldd	r21, Z+7	; 0x07
     b26:	28 17       	cp	r18, r24
     b28:	39 07       	cpc	r19, r25
     b2a:	4a 07       	cpc	r20, r26
     b2c:	5b 07       	cpc	r21, r27
     b2e:	18 f4       	brcc	.+6      	; 0xb36 <__fpcmp_parts_f+0x8e>
     b30:	11 23       	and	r17, r17
     b32:	41 f0       	breq	.+16     	; 0xb44 <__fpcmp_parts_f+0x9c>
     b34:	0a c0       	rjmp	.+20     	; 0xb4a <__fpcmp_parts_f+0xa2>
     b36:	82 17       	cp	r24, r18
     b38:	93 07       	cpc	r25, r19
     b3a:	a4 07       	cpc	r26, r20
     b3c:	b5 07       	cpc	r27, r21
     b3e:	40 f4       	brcc	.+16     	; 0xb50 <__fpcmp_parts_f+0xa8>
     b40:	11 23       	and	r17, r17
     b42:	19 f0       	breq	.+6      	; 0xb4a <__fpcmp_parts_f+0xa2>
     b44:	61 e0       	ldi	r22, 0x01	; 1
     b46:	70 e0       	ldi	r23, 0x00	; 0
     b48:	05 c0       	rjmp	.+10     	; 0xb54 <__fpcmp_parts_f+0xac>
     b4a:	6f ef       	ldi	r22, 0xFF	; 255
     b4c:	7f ef       	ldi	r23, 0xFF	; 255
     b4e:	02 c0       	rjmp	.+4      	; 0xb54 <__fpcmp_parts_f+0xac>
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	cb 01       	movw	r24, r22
     b56:	1f 91       	pop	r17
     b58:	08 95       	ret

00000b5a <ADC_Init>:

#include "ADC.h"
#include <avr/delay.h>

void ADC_Init(unsigned char channel)
{
     b5a:	df 93       	push	r29
     b5c:	cf 93       	push	r28
     b5e:	0f 92       	push	r0
     b60:	cd b7       	in	r28, 0x3d	; 61
     b62:	de b7       	in	r29, 0x3e	; 62
     b64:	89 83       	std	Y+1, r24	; 0x01
	DDRC&=(~(1<<channel));        /* Make ADC port as input */
     b66:	a7 e2       	ldi	r26, 0x27	; 39
     b68:	b0 e0       	ldi	r27, 0x00	; 0
     b6a:	e7 e2       	ldi	r30, 0x27	; 39
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	80 81       	ld	r24, Z
     b70:	48 2f       	mov	r20, r24
     b72:	89 81       	ldd	r24, Y+1	; 0x01
     b74:	28 2f       	mov	r18, r24
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	81 e0       	ldi	r24, 0x01	; 1
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	02 2e       	mov	r0, r18
     b7e:	02 c0       	rjmp	.+4      	; 0xb84 <ADC_Init+0x2a>
     b80:	88 0f       	add	r24, r24
     b82:	99 1f       	adc	r25, r25
     b84:	0a 94       	dec	r0
     b86:	e2 f7       	brpl	.-8      	; 0xb80 <ADC_Init+0x26>
     b88:	80 95       	com	r24
     b8a:	84 23       	and	r24, r20
     b8c:	8c 93       	st	X, r24
	ADCSRA = 0x87;          /* Enable ADC, with freq/128  */
     b8e:	ea e7       	ldi	r30, 0x7A	; 122
     b90:	f0 e0       	ldi	r31, 0x00	; 0
     b92:	87 e8       	ldi	r24, 0x87	; 135
     b94:	80 83       	st	Z, r24
	ADMUX = 0x40;           /* Vref: Avcc, ADC channel: 0 */
     b96:	ec e7       	ldi	r30, 0x7C	; 124
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	80 e4       	ldi	r24, 0x40	; 64
     b9c:	80 83       	st	Z, r24
}
     b9e:	0f 90       	pop	r0
     ba0:	cf 91       	pop	r28
     ba2:	df 91       	pop	r29
     ba4:	08 95       	ret

00000ba6 <ADC_Read>:

unsigned char ADC_Read(unsigned char channel)
{
     ba6:	df 93       	push	r29
     ba8:	cf 93       	push	r28
     baa:	cd b7       	in	r28, 0x3d	; 61
     bac:	de b7       	in	r29, 0x3e	; 62
     bae:	2f 97       	sbiw	r28, 0x0f	; 15
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	f8 94       	cli
     bb4:	de bf       	out	0x3e, r29	; 62
     bb6:	0f be       	out	0x3f, r0	; 63
     bb8:	cd bf       	out	0x3d, r28	; 61
     bba:	8f 87       	std	Y+15, r24	; 0x0f
	ADMUX = 0x40 | (channel & 0x07);   /* set input channel to read */
     bbc:	ec e7       	ldi	r30, 0x7C	; 124
     bbe:	f0 e0       	ldi	r31, 0x00	; 0
     bc0:	8f 85       	ldd	r24, Y+15	; 0x0f
     bc2:	87 70       	andi	r24, 0x07	; 7
     bc4:	80 64       	ori	r24, 0x40	; 64
     bc6:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);               /* Start ADC conversion */
     bc8:	aa e7       	ldi	r26, 0x7A	; 122
     bca:	b0 e0       	ldi	r27, 0x00	; 0
     bcc:	ea e7       	ldi	r30, 0x7A	; 122
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	80 81       	ld	r24, Z
     bd2:	80 64       	ori	r24, 0x40	; 64
     bd4:	8c 93       	st	X, r24
	while (!(ADCSRA & (1<<ADIF)));     /* Wait until end of conversion by polling ADC interrupt flag */
     bd6:	ea e7       	ldi	r30, 0x7A	; 122
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	80 81       	ld	r24, Z
     bdc:	88 2f       	mov	r24, r24
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	80 71       	andi	r24, 0x10	; 16
     be2:	90 70       	andi	r25, 0x00	; 0
     be4:	00 97       	sbiw	r24, 0x00	; 0
     be6:	b9 f3       	breq	.-18     	; 0xbd6 <ADC_Read+0x30>
	ADCSRA |= (1<<ADIF);               /* Clear interrupt flag */
     be8:	aa e7       	ldi	r26, 0x7A	; 122
     bea:	b0 e0       	ldi	r27, 0x00	; 0
     bec:	ea e7       	ldi	r30, 0x7A	; 122
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	80 81       	ld	r24, Z
     bf2:	80 61       	ori	r24, 0x10	; 16
     bf4:	8c 93       	st	X, r24
     bf6:	80 e0       	ldi	r24, 0x00	; 0
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	a0 e2       	ldi	r26, 0x20	; 32
     bfc:	b1 e4       	ldi	r27, 0x41	; 65
     bfe:	8b 87       	std	Y+11, r24	; 0x0b
     c00:	9c 87       	std	Y+12, r25	; 0x0c
     c02:	ad 87       	std	Y+13, r26	; 0x0d
     c04:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c06:	6b 85       	ldd	r22, Y+11	; 0x0b
     c08:	7c 85       	ldd	r23, Y+12	; 0x0c
     c0a:	8d 85       	ldd	r24, Y+13	; 0x0d
     c0c:	9e 85       	ldd	r25, Y+14	; 0x0e
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	30 e0       	ldi	r19, 0x00	; 0
     c12:	4a e7       	ldi	r20, 0x7A	; 122
     c14:	53 e4       	ldi	r21, 0x43	; 67
     c16:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
     c1a:	dc 01       	movw	r26, r24
     c1c:	cb 01       	movw	r24, r22
     c1e:	8f 83       	std	Y+7, r24	; 0x07
     c20:	98 87       	std	Y+8, r25	; 0x08
     c22:	a9 87       	std	Y+9, r26	; 0x09
     c24:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     c26:	6f 81       	ldd	r22, Y+7	; 0x07
     c28:	78 85       	ldd	r23, Y+8	; 0x08
     c2a:	89 85       	ldd	r24, Y+9	; 0x09
     c2c:	9a 85       	ldd	r25, Y+10	; 0x0a
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	40 e8       	ldi	r20, 0x80	; 128
     c34:	5f e3       	ldi	r21, 0x3F	; 63
     c36:	0e 94 83 03 	call	0x706	; 0x706 <__ltsf2>
     c3a:	88 23       	and	r24, r24
     c3c:	2c f4       	brge	.+10     	; 0xc48 <ADC_Read+0xa2>
		__ticks = 1;
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	9e 83       	std	Y+6, r25	; 0x06
     c44:	8d 83       	std	Y+5, r24	; 0x05
     c46:	3f c0       	rjmp	.+126    	; 0xcc6 <ADC_Read+0x120>
	else if (__tmp > 65535)
     c48:	6f 81       	ldd	r22, Y+7	; 0x07
     c4a:	78 85       	ldd	r23, Y+8	; 0x08
     c4c:	89 85       	ldd	r24, Y+9	; 0x09
     c4e:	9a 85       	ldd	r25, Y+10	; 0x0a
     c50:	20 e0       	ldi	r18, 0x00	; 0
     c52:	3f ef       	ldi	r19, 0xFF	; 255
     c54:	4f e7       	ldi	r20, 0x7F	; 127
     c56:	57 e4       	ldi	r21, 0x47	; 71
     c58:	0e 94 23 03 	call	0x646	; 0x646 <__gtsf2>
     c5c:	18 16       	cp	r1, r24
     c5e:	4c f5       	brge	.+82     	; 0xcb2 <ADC_Read+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c60:	6b 85       	ldd	r22, Y+11	; 0x0b
     c62:	7c 85       	ldd	r23, Y+12	; 0x0c
     c64:	8d 85       	ldd	r24, Y+13	; 0x0d
     c66:	9e 85       	ldd	r25, Y+14	; 0x0e
     c68:	20 e0       	ldi	r18, 0x00	; 0
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	40 e2       	ldi	r20, 0x20	; 32
     c6e:	51 e4       	ldi	r21, 0x41	; 65
     c70:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
     c74:	dc 01       	movw	r26, r24
     c76:	cb 01       	movw	r24, r22
     c78:	bc 01       	movw	r22, r24
     c7a:	cd 01       	movw	r24, r26
     c7c:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
     c80:	dc 01       	movw	r26, r24
     c82:	cb 01       	movw	r24, r22
     c84:	9e 83       	std	Y+6, r25	; 0x06
     c86:	8d 83       	std	Y+5, r24	; 0x05
     c88:	0f c0       	rjmp	.+30     	; 0xca8 <ADC_Read+0x102>
     c8a:	89 e1       	ldi	r24, 0x19	; 25
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	9c 83       	std	Y+4, r25	; 0x04
     c90:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c92:	8b 81       	ldd	r24, Y+3	; 0x03
     c94:	9c 81       	ldd	r25, Y+4	; 0x04
     c96:	01 97       	sbiw	r24, 0x01	; 1
     c98:	f1 f7       	brne	.-4      	; 0xc96 <ADC_Read+0xf0>
     c9a:	9c 83       	std	Y+4, r25	; 0x04
     c9c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c9e:	8d 81       	ldd	r24, Y+5	; 0x05
     ca0:	9e 81       	ldd	r25, Y+6	; 0x06
     ca2:	01 97       	sbiw	r24, 0x01	; 1
     ca4:	9e 83       	std	Y+6, r25	; 0x06
     ca6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ca8:	8d 81       	ldd	r24, Y+5	; 0x05
     caa:	9e 81       	ldd	r25, Y+6	; 0x06
     cac:	00 97       	sbiw	r24, 0x00	; 0
     cae:	69 f7       	brne	.-38     	; 0xc8a <ADC_Read+0xe4>
     cb0:	14 c0       	rjmp	.+40     	; 0xcda <ADC_Read+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cb2:	6f 81       	ldd	r22, Y+7	; 0x07
     cb4:	78 85       	ldd	r23, Y+8	; 0x08
     cb6:	89 85       	ldd	r24, Y+9	; 0x09
     cb8:	9a 85       	ldd	r25, Y+10	; 0x0a
     cba:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
     cbe:	dc 01       	movw	r26, r24
     cc0:	cb 01       	movw	r24, r22
     cc2:	9e 83       	std	Y+6, r25	; 0x06
     cc4:	8d 83       	std	Y+5, r24	; 0x05
     cc6:	8d 81       	ldd	r24, Y+5	; 0x05
     cc8:	9e 81       	ldd	r25, Y+6	; 0x06
     cca:	9a 83       	std	Y+2, r25	; 0x02
     ccc:	89 83       	std	Y+1, r24	; 0x01
     cce:	89 81       	ldd	r24, Y+1	; 0x01
     cd0:	9a 81       	ldd	r25, Y+2	; 0x02
     cd2:	01 97       	sbiw	r24, 0x01	; 1
     cd4:	f1 f7       	brne	.-4      	; 0xcd2 <ADC_Read+0x12c>
     cd6:	9a 83       	std	Y+2, r25	; 0x02
     cd8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);                      /* Wait a little bit */
	return ADCH;                       /* Return ADC word */
     cda:	e9 e7       	ldi	r30, 0x79	; 121
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	80 81       	ld	r24, Z
}
     ce0:	2f 96       	adiw	r28, 0x0f	; 15
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	cf 91       	pop	r28
     cee:	df 91       	pop	r29
     cf0:	08 95       	ret

00000cf2 <i2c_write>:
 */
#include <avr/io.h>
#include "master.h"

void i2c_write(unsigned char data)
{
     cf2:	df 93       	push	r29
     cf4:	cf 93       	push	r28
     cf6:	0f 92       	push	r0
     cf8:	cd b7       	in	r28, 0x3d	; 61
     cfa:	de b7       	in	r29, 0x3e	; 62
     cfc:	89 83       	std	Y+1, r24	; 0x01
	TWDR = data;
     cfe:	eb eb       	ldi	r30, 0xBB	; 187
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	89 81       	ldd	r24, Y+1	; 0x01
     d04:	80 83       	st	Z, r24
	TWCR = (1<<TWINT)|(1<<TWEN);
     d06:	ec eb       	ldi	r30, 0xBC	; 188
     d08:	f0 e0       	ldi	r31, 0x00	; 0
     d0a:	84 e8       	ldi	r24, 0x84	; 132
     d0c:	80 83       	st	Z, r24
	while((TWCR & (1<<TWINT))==0);
     d0e:	ec eb       	ldi	r30, 0xBC	; 188
     d10:	f0 e0       	ldi	r31, 0x00	; 0
     d12:	80 81       	ld	r24, Z
     d14:	88 23       	and	r24, r24
     d16:	dc f7       	brge	.-10     	; 0xd0e <i2c_write+0x1c>
}
     d18:	0f 90       	pop	r0
     d1a:	cf 91       	pop	r28
     d1c:	df 91       	pop	r29
     d1e:	08 95       	ret

00000d20 <i2c_start>:

void i2c_start(void)
{
     d20:	df 93       	push	r29
     d22:	cf 93       	push	r28
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
     d28:	ec eb       	ldi	r30, 0xBC	; 188
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	84 ea       	ldi	r24, 0xA4	; 164
     d2e:	80 83       	st	Z, r24
	while((TWCR & (1<<TWINT))==0);
     d30:	ec eb       	ldi	r30, 0xBC	; 188
     d32:	f0 e0       	ldi	r31, 0x00	; 0
     d34:	80 81       	ld	r24, Z
     d36:	88 23       	and	r24, r24
     d38:	dc f7       	brge	.-10     	; 0xd30 <i2c_start+0x10>
}
     d3a:	cf 91       	pop	r28
     d3c:	df 91       	pop	r29
     d3e:	08 95       	ret

00000d40 <i2c_stop>:

void i2c_stop(void)
{
     d40:	df 93       	push	r29
     d42:	cf 93       	push	r28
     d44:	cd b7       	in	r28, 0x3d	; 61
     d46:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     d48:	ec eb       	ldi	r30, 0xBC	; 188
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	84 e9       	ldi	r24, 0x94	; 148
     d4e:	80 83       	st	Z, r24
}
     d50:	cf 91       	pop	r28
     d52:	df 91       	pop	r29
     d54:	08 95       	ret

00000d56 <i2c_init>:

void i2c_init(void)
{
     d56:	df 93       	push	r29
     d58:	cf 93       	push	r28
     d5a:	cd b7       	in	r28, 0x3d	; 61
     d5c:	de b7       	in	r29, 0x3e	; 62
	//prescaler
	TWSR=0x00;
     d5e:	e9 eb       	ldi	r30, 0xB9	; 185
     d60:	f0 e0       	ldi	r31, 0x00	; 0
     d62:	10 82       	st	Z, r1
	TWBR= 0x47;
     d64:	e8 eb       	ldi	r30, 0xB8	; 184
     d66:	f0 e0       	ldi	r31, 0x00	; 0
     d68:	87 e4       	ldi	r24, 0x47	; 71
     d6a:	80 83       	st	Z, r24
	TWCR =0x04;
     d6c:	ec eb       	ldi	r30, 0xBC	; 188
     d6e:	f0 e0       	ldi	r31, 0x00	; 0
     d70:	84 e0       	ldi	r24, 0x04	; 4
     d72:	80 83       	st	Z, r24
}
     d74:	cf 91       	pop	r28
     d76:	df 91       	pop	r29
     d78:	08 95       	ret

00000d7a <main>:

static volatile int pulse = 0;
static volatile int i = 0;

void main(void)
{
     d7a:	0f 93       	push	r16
     d7c:	1f 93       	push	r17
     d7e:	df 93       	push	r29
     d80:	cf 93       	push	r28
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
     d86:	c4 55       	subi	r28, 0x54	; 84
     d88:	d0 40       	sbci	r29, 0x00	; 0
     d8a:	0f b6       	in	r0, 0x3f	; 63
     d8c:	f8 94       	cli
     d8e:	de bf       	out	0x3e, r29	; 62
     d90:	0f be       	out	0x3f, r0	; 63
     d92:	cd bf       	out	0x3d, r28	; 61
     d94:	fe 01       	movw	r30, r28
     d96:	ef 5a       	subi	r30, 0xAF	; 175
     d98:	ff 4f       	sbci	r31, 0xFF	; 255
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	90 e4       	ldi	r25, 0x40	; 64
     d9e:	ac e9       	ldi	r26, 0x9C	; 156
     da0:	b5 e4       	ldi	r27, 0x45	; 69
     da2:	80 83       	st	Z, r24
     da4:	91 83       	std	Z+1, r25	; 0x01
     da6:	a2 83       	std	Z+2, r26	; 0x02
     da8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     daa:	8e 01       	movw	r16, r28
     dac:	03 5b       	subi	r16, 0xB3	; 179
     dae:	1f 4f       	sbci	r17, 0xFF	; 255
     db0:	fe 01       	movw	r30, r28
     db2:	ef 5a       	subi	r30, 0xAF	; 175
     db4:	ff 4f       	sbci	r31, 0xFF	; 255
     db6:	60 81       	ld	r22, Z
     db8:	71 81       	ldd	r23, Z+1	; 0x01
     dba:	82 81       	ldd	r24, Z+2	; 0x02
     dbc:	93 81       	ldd	r25, Z+3	; 0x03
     dbe:	20 e0       	ldi	r18, 0x00	; 0
     dc0:	30 e0       	ldi	r19, 0x00	; 0
     dc2:	4a e7       	ldi	r20, 0x7A	; 122
     dc4:	53 e4       	ldi	r21, 0x43	; 67
     dc6:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
     dca:	dc 01       	movw	r26, r24
     dcc:	cb 01       	movw	r24, r22
     dce:	f8 01       	movw	r30, r16
     dd0:	80 83       	st	Z, r24
     dd2:	91 83       	std	Z+1, r25	; 0x01
     dd4:	a2 83       	std	Z+2, r26	; 0x02
     dd6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     dd8:	fe 01       	movw	r30, r28
     dda:	e3 5b       	subi	r30, 0xB3	; 179
     ddc:	ff 4f       	sbci	r31, 0xFF	; 255
     dde:	60 81       	ld	r22, Z
     de0:	71 81       	ldd	r23, Z+1	; 0x01
     de2:	82 81       	ldd	r24, Z+2	; 0x02
     de4:	93 81       	ldd	r25, Z+3	; 0x03
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	40 e8       	ldi	r20, 0x80	; 128
     dec:	5f e3       	ldi	r21, 0x3F	; 63
     dee:	0e 94 83 03 	call	0x706	; 0x706 <__ltsf2>
     df2:	88 23       	and	r24, r24
     df4:	44 f4       	brge	.+16     	; 0xe06 <main+0x8c>
		__ticks = 1;
     df6:	fe 01       	movw	r30, r28
     df8:	e5 5b       	subi	r30, 0xB5	; 181
     dfa:	ff 4f       	sbci	r31, 0xFF	; 255
     dfc:	81 e0       	ldi	r24, 0x01	; 1
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	91 83       	std	Z+1, r25	; 0x01
     e02:	80 83       	st	Z, r24
     e04:	64 c0       	rjmp	.+200    	; 0xece <main+0x154>
	else if (__tmp > 65535)
     e06:	fe 01       	movw	r30, r28
     e08:	e3 5b       	subi	r30, 0xB3	; 179
     e0a:	ff 4f       	sbci	r31, 0xFF	; 255
     e0c:	60 81       	ld	r22, Z
     e0e:	71 81       	ldd	r23, Z+1	; 0x01
     e10:	82 81       	ldd	r24, Z+2	; 0x02
     e12:	93 81       	ldd	r25, Z+3	; 0x03
     e14:	20 e0       	ldi	r18, 0x00	; 0
     e16:	3f ef       	ldi	r19, 0xFF	; 255
     e18:	4f e7       	ldi	r20, 0x7F	; 127
     e1a:	57 e4       	ldi	r21, 0x47	; 71
     e1c:	0e 94 23 03 	call	0x646	; 0x646 <__gtsf2>
     e20:	18 16       	cp	r1, r24
     e22:	0c f0       	brlt	.+2      	; 0xe26 <main+0xac>
     e24:	43 c0       	rjmp	.+134    	; 0xeac <main+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e26:	fe 01       	movw	r30, r28
     e28:	ef 5a       	subi	r30, 0xAF	; 175
     e2a:	ff 4f       	sbci	r31, 0xFF	; 255
     e2c:	60 81       	ld	r22, Z
     e2e:	71 81       	ldd	r23, Z+1	; 0x01
     e30:	82 81       	ldd	r24, Z+2	; 0x02
     e32:	93 81       	ldd	r25, Z+3	; 0x03
     e34:	20 e0       	ldi	r18, 0x00	; 0
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	40 e2       	ldi	r20, 0x20	; 32
     e3a:	51 e4       	ldi	r21, 0x41	; 65
     e3c:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
     e40:	dc 01       	movw	r26, r24
     e42:	cb 01       	movw	r24, r22
     e44:	8e 01       	movw	r16, r28
     e46:	05 5b       	subi	r16, 0xB5	; 181
     e48:	1f 4f       	sbci	r17, 0xFF	; 255
     e4a:	bc 01       	movw	r22, r24
     e4c:	cd 01       	movw	r24, r26
     e4e:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
     e52:	dc 01       	movw	r26, r24
     e54:	cb 01       	movw	r24, r22
     e56:	f8 01       	movw	r30, r16
     e58:	91 83       	std	Z+1, r25	; 0x01
     e5a:	80 83       	st	Z, r24
     e5c:	1f c0       	rjmp	.+62     	; 0xe9c <main+0x122>
     e5e:	fe 01       	movw	r30, r28
     e60:	e7 5b       	subi	r30, 0xB7	; 183
     e62:	ff 4f       	sbci	r31, 0xFF	; 255
     e64:	89 e1       	ldi	r24, 0x19	; 25
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	91 83       	std	Z+1, r25	; 0x01
     e6a:	80 83       	st	Z, r24
     e6c:	fe 01       	movw	r30, r28
     e6e:	e7 5b       	subi	r30, 0xB7	; 183
     e70:	ff 4f       	sbci	r31, 0xFF	; 255
     e72:	80 81       	ld	r24, Z
     e74:	91 81       	ldd	r25, Z+1	; 0x01
     e76:	01 97       	sbiw	r24, 0x01	; 1
     e78:	f1 f7       	brne	.-4      	; 0xe76 <main+0xfc>
     e7a:	fe 01       	movw	r30, r28
     e7c:	e7 5b       	subi	r30, 0xB7	; 183
     e7e:	ff 4f       	sbci	r31, 0xFF	; 255
     e80:	91 83       	std	Z+1, r25	; 0x01
     e82:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e84:	de 01       	movw	r26, r28
     e86:	a5 5b       	subi	r26, 0xB5	; 181
     e88:	bf 4f       	sbci	r27, 0xFF	; 255
     e8a:	fe 01       	movw	r30, r28
     e8c:	e5 5b       	subi	r30, 0xB5	; 181
     e8e:	ff 4f       	sbci	r31, 0xFF	; 255
     e90:	80 81       	ld	r24, Z
     e92:	91 81       	ldd	r25, Z+1	; 0x01
     e94:	01 97       	sbiw	r24, 0x01	; 1
     e96:	11 96       	adiw	r26, 0x01	; 1
     e98:	9c 93       	st	X, r25
     e9a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e9c:	fe 01       	movw	r30, r28
     e9e:	e5 5b       	subi	r30, 0xB5	; 181
     ea0:	ff 4f       	sbci	r31, 0xFF	; 255
     ea2:	80 81       	ld	r24, Z
     ea4:	91 81       	ldd	r25, Z+1	; 0x01
     ea6:	00 97       	sbiw	r24, 0x00	; 0
     ea8:	d1 f6       	brne	.-76     	; 0xe5e <main+0xe4>
     eaa:	27 c0       	rjmp	.+78     	; 0xefa <main+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     eac:	8e 01       	movw	r16, r28
     eae:	05 5b       	subi	r16, 0xB5	; 181
     eb0:	1f 4f       	sbci	r17, 0xFF	; 255
     eb2:	fe 01       	movw	r30, r28
     eb4:	e3 5b       	subi	r30, 0xB3	; 179
     eb6:	ff 4f       	sbci	r31, 0xFF	; 255
     eb8:	60 81       	ld	r22, Z
     eba:	71 81       	ldd	r23, Z+1	; 0x01
     ebc:	82 81       	ldd	r24, Z+2	; 0x02
     ebe:	93 81       	ldd	r25, Z+3	; 0x03
     ec0:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
     ec4:	dc 01       	movw	r26, r24
     ec6:	cb 01       	movw	r24, r22
     ec8:	f8 01       	movw	r30, r16
     eca:	91 83       	std	Z+1, r25	; 0x01
     ecc:	80 83       	st	Z, r24
     ece:	de 01       	movw	r26, r28
     ed0:	a9 5b       	subi	r26, 0xB9	; 185
     ed2:	bf 4f       	sbci	r27, 0xFF	; 255
     ed4:	fe 01       	movw	r30, r28
     ed6:	e5 5b       	subi	r30, 0xB5	; 181
     ed8:	ff 4f       	sbci	r31, 0xFF	; 255
     eda:	80 81       	ld	r24, Z
     edc:	91 81       	ldd	r25, Z+1	; 0x01
     ede:	8d 93       	st	X+, r24
     ee0:	9c 93       	st	X, r25
     ee2:	fe 01       	movw	r30, r28
     ee4:	e9 5b       	subi	r30, 0xB9	; 185
     ee6:	ff 4f       	sbci	r31, 0xFF	; 255
     ee8:	80 81       	ld	r24, Z
     eea:	91 81       	ldd	r25, Z+1	; 0x01
     eec:	01 97       	sbiw	r24, 0x01	; 1
     eee:	f1 f7       	brne	.-4      	; 0xeec <main+0x172>
     ef0:	fe 01       	movw	r30, r28
     ef2:	e9 5b       	subi	r30, 0xB9	; 185
     ef4:	ff 4f       	sbci	r31, 0xFF	; 255
     ef6:	91 83       	std	Z+1, r25	; 0x01
     ef8:	80 83       	st	Z, r24

	_delay_ms(5000);
	i2c_init();
     efa:	0e 94 ab 06 	call	0xd56	; 0xd56 <i2c_init>
	i2c_start();
     efe:	0e 94 90 06 	call	0xd20	; 0xd20 <i2c_start>
	i2c_write(0x10);
     f02:	80 e1       	ldi	r24, 0x10	; 16
     f04:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
     f08:	fe 01       	movw	r30, r28
     f0a:	ed 5b       	subi	r30, 0xBD	; 189
     f0c:	ff 4f       	sbci	r31, 0xFF	; 255
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	90 e4       	ldi	r25, 0x40	; 64
     f12:	ac e9       	ldi	r26, 0x9C	; 156
     f14:	b5 e4       	ldi	r27, 0x45	; 69
     f16:	80 83       	st	Z, r24
     f18:	91 83       	std	Z+1, r25	; 0x01
     f1a:	a2 83       	std	Z+2, r26	; 0x02
     f1c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f1e:	8e 01       	movw	r16, r28
     f20:	01 5c       	subi	r16, 0xC1	; 193
     f22:	1f 4f       	sbci	r17, 0xFF	; 255
     f24:	fe 01       	movw	r30, r28
     f26:	ed 5b       	subi	r30, 0xBD	; 189
     f28:	ff 4f       	sbci	r31, 0xFF	; 255
     f2a:	60 81       	ld	r22, Z
     f2c:	71 81       	ldd	r23, Z+1	; 0x01
     f2e:	82 81       	ldd	r24, Z+2	; 0x02
     f30:	93 81       	ldd	r25, Z+3	; 0x03
     f32:	20 e0       	ldi	r18, 0x00	; 0
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	4a e7       	ldi	r20, 0x7A	; 122
     f38:	53 e4       	ldi	r21, 0x43	; 67
     f3a:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
     f3e:	dc 01       	movw	r26, r24
     f40:	cb 01       	movw	r24, r22
     f42:	f8 01       	movw	r30, r16
     f44:	80 83       	st	Z, r24
     f46:	91 83       	std	Z+1, r25	; 0x01
     f48:	a2 83       	std	Z+2, r26	; 0x02
     f4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f4c:	fe 01       	movw	r30, r28
     f4e:	ff 96       	adiw	r30, 0x3f	; 63
     f50:	60 81       	ld	r22, Z
     f52:	71 81       	ldd	r23, Z+1	; 0x01
     f54:	82 81       	ldd	r24, Z+2	; 0x02
     f56:	93 81       	ldd	r25, Z+3	; 0x03
     f58:	20 e0       	ldi	r18, 0x00	; 0
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	40 e8       	ldi	r20, 0x80	; 128
     f5e:	5f e3       	ldi	r21, 0x3F	; 63
     f60:	0e 94 83 03 	call	0x706	; 0x706 <__ltsf2>
     f64:	88 23       	and	r24, r24
     f66:	2c f4       	brge	.+10     	; 0xf72 <main+0x1f8>
		__ticks = 1;
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	9e af       	std	Y+62, r25	; 0x3e
     f6e:	8d af       	std	Y+61, r24	; 0x3d
     f70:	46 c0       	rjmp	.+140    	; 0xffe <main+0x284>
	else if (__tmp > 65535)
     f72:	fe 01       	movw	r30, r28
     f74:	ff 96       	adiw	r30, 0x3f	; 63
     f76:	60 81       	ld	r22, Z
     f78:	71 81       	ldd	r23, Z+1	; 0x01
     f7a:	82 81       	ldd	r24, Z+2	; 0x02
     f7c:	93 81       	ldd	r25, Z+3	; 0x03
     f7e:	20 e0       	ldi	r18, 0x00	; 0
     f80:	3f ef       	ldi	r19, 0xFF	; 255
     f82:	4f e7       	ldi	r20, 0x7F	; 127
     f84:	57 e4       	ldi	r21, 0x47	; 71
     f86:	0e 94 23 03 	call	0x646	; 0x646 <__gtsf2>
     f8a:	18 16       	cp	r1, r24
     f8c:	64 f5       	brge	.+88     	; 0xfe6 <main+0x26c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f8e:	fe 01       	movw	r30, r28
     f90:	ed 5b       	subi	r30, 0xBD	; 189
     f92:	ff 4f       	sbci	r31, 0xFF	; 255
     f94:	60 81       	ld	r22, Z
     f96:	71 81       	ldd	r23, Z+1	; 0x01
     f98:	82 81       	ldd	r24, Z+2	; 0x02
     f9a:	93 81       	ldd	r25, Z+3	; 0x03
     f9c:	20 e0       	ldi	r18, 0x00	; 0
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	40 e2       	ldi	r20, 0x20	; 32
     fa2:	51 e4       	ldi	r21, 0x41	; 65
     fa4:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
     fa8:	dc 01       	movw	r26, r24
     faa:	cb 01       	movw	r24, r22
     fac:	bc 01       	movw	r22, r24
     fae:	cd 01       	movw	r24, r26
     fb0:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
     fb4:	dc 01       	movw	r26, r24
     fb6:	cb 01       	movw	r24, r22
     fb8:	9e af       	std	Y+62, r25	; 0x3e
     fba:	8d af       	std	Y+61, r24	; 0x3d
     fbc:	0f c0       	rjmp	.+30     	; 0xfdc <main+0x262>
     fbe:	89 e1       	ldi	r24, 0x19	; 25
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	9c af       	std	Y+60, r25	; 0x3c
     fc4:	8b af       	std	Y+59, r24	; 0x3b
     fc6:	8b ad       	ldd	r24, Y+59	; 0x3b
     fc8:	9c ad       	ldd	r25, Y+60	; 0x3c
     fca:	01 97       	sbiw	r24, 0x01	; 1
     fcc:	f1 f7       	brne	.-4      	; 0xfca <main+0x250>
     fce:	9c af       	std	Y+60, r25	; 0x3c
     fd0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fd2:	8d ad       	ldd	r24, Y+61	; 0x3d
     fd4:	9e ad       	ldd	r25, Y+62	; 0x3e
     fd6:	01 97       	sbiw	r24, 0x01	; 1
     fd8:	9e af       	std	Y+62, r25	; 0x3e
     fda:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fdc:	8d ad       	ldd	r24, Y+61	; 0x3d
     fde:	9e ad       	ldd	r25, Y+62	; 0x3e
     fe0:	00 97       	sbiw	r24, 0x00	; 0
     fe2:	69 f7       	brne	.-38     	; 0xfbe <main+0x244>
     fe4:	16 c0       	rjmp	.+44     	; 0x1012 <main+0x298>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fe6:	fe 01       	movw	r30, r28
     fe8:	ff 96       	adiw	r30, 0x3f	; 63
     fea:	60 81       	ld	r22, Z
     fec:	71 81       	ldd	r23, Z+1	; 0x01
     fee:	82 81       	ldd	r24, Z+2	; 0x02
     ff0:	93 81       	ldd	r25, Z+3	; 0x03
     ff2:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
     ff6:	dc 01       	movw	r26, r24
     ff8:	cb 01       	movw	r24, r22
     ffa:	9e af       	std	Y+62, r25	; 0x3e
     ffc:	8d af       	std	Y+61, r24	; 0x3d
     ffe:	8d ad       	ldd	r24, Y+61	; 0x3d
    1000:	9e ad       	ldd	r25, Y+62	; 0x3e
    1002:	9a af       	std	Y+58, r25	; 0x3a
    1004:	89 af       	std	Y+57, r24	; 0x39
    1006:	89 ad       	ldd	r24, Y+57	; 0x39
    1008:	9a ad       	ldd	r25, Y+58	; 0x3a
    100a:	01 97       	sbiw	r24, 0x01	; 1
    100c:	f1 f7       	brne	.-4      	; 0x100a <main+0x290>
    100e:	9a af       	std	Y+58, r25	; 0x3a
    1010:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(5000);
	i2c_write(22);//////////
    1012:	86 e1       	ldi	r24, 0x16	; 22
    1014:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
	//_delay_ms(5000);
	i2c_write(60);//0000000000
    1018:	8c e3       	ldi	r24, 0x3C	; 60
    101a:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
    101e:	80 e0       	ldi	r24, 0x00	; 0
    1020:	90 e4       	ldi	r25, 0x40	; 64
    1022:	ac e9       	ldi	r26, 0x9C	; 156
    1024:	b5 e4       	ldi	r27, 0x45	; 69
    1026:	8d ab       	std	Y+53, r24	; 0x35
    1028:	9e ab       	std	Y+54, r25	; 0x36
    102a:	af ab       	std	Y+55, r26	; 0x37
    102c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    102e:	6d a9       	ldd	r22, Y+53	; 0x35
    1030:	7e a9       	ldd	r23, Y+54	; 0x36
    1032:	8f a9       	ldd	r24, Y+55	; 0x37
    1034:	98 ad       	ldd	r25, Y+56	; 0x38
    1036:	20 e0       	ldi	r18, 0x00	; 0
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	4a e7       	ldi	r20, 0x7A	; 122
    103c:	53 e4       	ldi	r21, 0x43	; 67
    103e:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    1042:	dc 01       	movw	r26, r24
    1044:	cb 01       	movw	r24, r22
    1046:	89 ab       	std	Y+49, r24	; 0x31
    1048:	9a ab       	std	Y+50, r25	; 0x32
    104a:	ab ab       	std	Y+51, r26	; 0x33
    104c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    104e:	69 a9       	ldd	r22, Y+49	; 0x31
    1050:	7a a9       	ldd	r23, Y+50	; 0x32
    1052:	8b a9       	ldd	r24, Y+51	; 0x33
    1054:	9c a9       	ldd	r25, Y+52	; 0x34
    1056:	20 e0       	ldi	r18, 0x00	; 0
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	40 e8       	ldi	r20, 0x80	; 128
    105c:	5f e3       	ldi	r21, 0x3F	; 63
    105e:	0e 94 83 03 	call	0x706	; 0x706 <__ltsf2>
    1062:	88 23       	and	r24, r24
    1064:	2c f4       	brge	.+10     	; 0x1070 <main+0x2f6>
		__ticks = 1;
    1066:	81 e0       	ldi	r24, 0x01	; 1
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	98 ab       	std	Y+48, r25	; 0x30
    106c:	8f a7       	std	Y+47, r24	; 0x2f
    106e:	3f c0       	rjmp	.+126    	; 0x10ee <main+0x374>
	else if (__tmp > 65535)
    1070:	69 a9       	ldd	r22, Y+49	; 0x31
    1072:	7a a9       	ldd	r23, Y+50	; 0x32
    1074:	8b a9       	ldd	r24, Y+51	; 0x33
    1076:	9c a9       	ldd	r25, Y+52	; 0x34
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	3f ef       	ldi	r19, 0xFF	; 255
    107c:	4f e7       	ldi	r20, 0x7F	; 127
    107e:	57 e4       	ldi	r21, 0x47	; 71
    1080:	0e 94 23 03 	call	0x646	; 0x646 <__gtsf2>
    1084:	18 16       	cp	r1, r24
    1086:	4c f5       	brge	.+82     	; 0x10da <main+0x360>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1088:	6d a9       	ldd	r22, Y+53	; 0x35
    108a:	7e a9       	ldd	r23, Y+54	; 0x36
    108c:	8f a9       	ldd	r24, Y+55	; 0x37
    108e:	98 ad       	ldd	r25, Y+56	; 0x38
    1090:	20 e0       	ldi	r18, 0x00	; 0
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	40 e2       	ldi	r20, 0x20	; 32
    1096:	51 e4       	ldi	r21, 0x41	; 65
    1098:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    109c:	dc 01       	movw	r26, r24
    109e:	cb 01       	movw	r24, r22
    10a0:	bc 01       	movw	r22, r24
    10a2:	cd 01       	movw	r24, r26
    10a4:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
    10a8:	dc 01       	movw	r26, r24
    10aa:	cb 01       	movw	r24, r22
    10ac:	98 ab       	std	Y+48, r25	; 0x30
    10ae:	8f a7       	std	Y+47, r24	; 0x2f
    10b0:	0f c0       	rjmp	.+30     	; 0x10d0 <main+0x356>
    10b2:	89 e1       	ldi	r24, 0x19	; 25
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	9e a7       	std	Y+46, r25	; 0x2e
    10b8:	8d a7       	std	Y+45, r24	; 0x2d
    10ba:	8d a5       	ldd	r24, Y+45	; 0x2d
    10bc:	9e a5       	ldd	r25, Y+46	; 0x2e
    10be:	01 97       	sbiw	r24, 0x01	; 1
    10c0:	f1 f7       	brne	.-4      	; 0x10be <main+0x344>
    10c2:	9e a7       	std	Y+46, r25	; 0x2e
    10c4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10c6:	8f a5       	ldd	r24, Y+47	; 0x2f
    10c8:	98 a9       	ldd	r25, Y+48	; 0x30
    10ca:	01 97       	sbiw	r24, 0x01	; 1
    10cc:	98 ab       	std	Y+48, r25	; 0x30
    10ce:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    10d2:	98 a9       	ldd	r25, Y+48	; 0x30
    10d4:	00 97       	sbiw	r24, 0x00	; 0
    10d6:	69 f7       	brne	.-38     	; 0x10b2 <main+0x338>
    10d8:	14 c0       	rjmp	.+40     	; 0x1102 <main+0x388>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10da:	69 a9       	ldd	r22, Y+49	; 0x31
    10dc:	7a a9       	ldd	r23, Y+50	; 0x32
    10de:	8b a9       	ldd	r24, Y+51	; 0x33
    10e0:	9c a9       	ldd	r25, Y+52	; 0x34
    10e2:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
    10e6:	dc 01       	movw	r26, r24
    10e8:	cb 01       	movw	r24, r22
    10ea:	98 ab       	std	Y+48, r25	; 0x30
    10ec:	8f a7       	std	Y+47, r24	; 0x2f
    10ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    10f0:	98 a9       	ldd	r25, Y+48	; 0x30
    10f2:	9c a7       	std	Y+44, r25	; 0x2c
    10f4:	8b a7       	std	Y+43, r24	; 0x2b
    10f6:	8b a5       	ldd	r24, Y+43	; 0x2b
    10f8:	9c a5       	ldd	r25, Y+44	; 0x2c
    10fa:	01 97       	sbiw	r24, 0x01	; 1
    10fc:	f1 f7       	brne	.-4      	; 0x10fa <main+0x380>
    10fe:	9c a7       	std	Y+44, r25	; 0x2c
    1100:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(5000);
	i2c_write(22);//////////
    1102:	86 e1       	ldi	r24, 0x16	; 22
    1104:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
		//_delay_ms(5000);
		i2c_write(60);//0000000000
    1108:	8c e3       	ldi	r24, 0x3C	; 60
    110a:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
    110e:	80 e0       	ldi	r24, 0x00	; 0
    1110:	90 e4       	ldi	r25, 0x40	; 64
    1112:	ac e9       	ldi	r26, 0x9C	; 156
    1114:	b5 e4       	ldi	r27, 0x45	; 69
    1116:	8f a3       	std	Y+39, r24	; 0x27
    1118:	98 a7       	std	Y+40, r25	; 0x28
    111a:	a9 a7       	std	Y+41, r26	; 0x29
    111c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    111e:	6f a1       	ldd	r22, Y+39	; 0x27
    1120:	78 a5       	ldd	r23, Y+40	; 0x28
    1122:	89 a5       	ldd	r24, Y+41	; 0x29
    1124:	9a a5       	ldd	r25, Y+42	; 0x2a
    1126:	20 e0       	ldi	r18, 0x00	; 0
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	4a e7       	ldi	r20, 0x7A	; 122
    112c:	53 e4       	ldi	r21, 0x43	; 67
    112e:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    1132:	dc 01       	movw	r26, r24
    1134:	cb 01       	movw	r24, r22
    1136:	8b a3       	std	Y+35, r24	; 0x23
    1138:	9c a3       	std	Y+36, r25	; 0x24
    113a:	ad a3       	std	Y+37, r26	; 0x25
    113c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    113e:	6b a1       	ldd	r22, Y+35	; 0x23
    1140:	7c a1       	ldd	r23, Y+36	; 0x24
    1142:	8d a1       	ldd	r24, Y+37	; 0x25
    1144:	9e a1       	ldd	r25, Y+38	; 0x26
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	40 e8       	ldi	r20, 0x80	; 128
    114c:	5f e3       	ldi	r21, 0x3F	; 63
    114e:	0e 94 83 03 	call	0x706	; 0x706 <__ltsf2>
    1152:	88 23       	and	r24, r24
    1154:	2c f4       	brge	.+10     	; 0x1160 <main+0x3e6>
		__ticks = 1;
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	9a a3       	std	Y+34, r25	; 0x22
    115c:	89 a3       	std	Y+33, r24	; 0x21
    115e:	3f c0       	rjmp	.+126    	; 0x11de <main+0x464>
	else if (__tmp > 65535)
    1160:	6b a1       	ldd	r22, Y+35	; 0x23
    1162:	7c a1       	ldd	r23, Y+36	; 0x24
    1164:	8d a1       	ldd	r24, Y+37	; 0x25
    1166:	9e a1       	ldd	r25, Y+38	; 0x26
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	3f ef       	ldi	r19, 0xFF	; 255
    116c:	4f e7       	ldi	r20, 0x7F	; 127
    116e:	57 e4       	ldi	r21, 0x47	; 71
    1170:	0e 94 23 03 	call	0x646	; 0x646 <__gtsf2>
    1174:	18 16       	cp	r1, r24
    1176:	4c f5       	brge	.+82     	; 0x11ca <main+0x450>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1178:	6f a1       	ldd	r22, Y+39	; 0x27
    117a:	78 a5       	ldd	r23, Y+40	; 0x28
    117c:	89 a5       	ldd	r24, Y+41	; 0x29
    117e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	40 e2       	ldi	r20, 0x20	; 32
    1186:	51 e4       	ldi	r21, 0x41	; 65
    1188:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    118c:	dc 01       	movw	r26, r24
    118e:	cb 01       	movw	r24, r22
    1190:	bc 01       	movw	r22, r24
    1192:	cd 01       	movw	r24, r26
    1194:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
    1198:	dc 01       	movw	r26, r24
    119a:	cb 01       	movw	r24, r22
    119c:	9a a3       	std	Y+34, r25	; 0x22
    119e:	89 a3       	std	Y+33, r24	; 0x21
    11a0:	0f c0       	rjmp	.+30     	; 0x11c0 <main+0x446>
    11a2:	89 e1       	ldi	r24, 0x19	; 25
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	98 a3       	std	Y+32, r25	; 0x20
    11a8:	8f 8f       	std	Y+31, r24	; 0x1f
    11aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    11ac:	98 a1       	ldd	r25, Y+32	; 0x20
    11ae:	01 97       	sbiw	r24, 0x01	; 1
    11b0:	f1 f7       	brne	.-4      	; 0x11ae <main+0x434>
    11b2:	98 a3       	std	Y+32, r25	; 0x20
    11b4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11b6:	89 a1       	ldd	r24, Y+33	; 0x21
    11b8:	9a a1       	ldd	r25, Y+34	; 0x22
    11ba:	01 97       	sbiw	r24, 0x01	; 1
    11bc:	9a a3       	std	Y+34, r25	; 0x22
    11be:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11c0:	89 a1       	ldd	r24, Y+33	; 0x21
    11c2:	9a a1       	ldd	r25, Y+34	; 0x22
    11c4:	00 97       	sbiw	r24, 0x00	; 0
    11c6:	69 f7       	brne	.-38     	; 0x11a2 <main+0x428>
    11c8:	14 c0       	rjmp	.+40     	; 0x11f2 <main+0x478>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11ca:	6b a1       	ldd	r22, Y+35	; 0x23
    11cc:	7c a1       	ldd	r23, Y+36	; 0x24
    11ce:	8d a1       	ldd	r24, Y+37	; 0x25
    11d0:	9e a1       	ldd	r25, Y+38	; 0x26
    11d2:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	9a a3       	std	Y+34, r25	; 0x22
    11dc:	89 a3       	std	Y+33, r24	; 0x21
    11de:	89 a1       	ldd	r24, Y+33	; 0x21
    11e0:	9a a1       	ldd	r25, Y+34	; 0x22
    11e2:	9e 8f       	std	Y+30, r25	; 0x1e
    11e4:	8d 8f       	std	Y+29, r24	; 0x1d
    11e6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    11e8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    11ea:	01 97       	sbiw	r24, 0x01	; 1
    11ec:	f1 f7       	brne	.-4      	; 0x11ea <main+0x470>
    11ee:	9e 8f       	std	Y+30, r25	; 0x1e
    11f0:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(5000);
		i2c_write(22);//////////
    11f2:	86 e1       	ldi	r24, 0x16	; 22
    11f4:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
			//_delay_ms(5000);
			i2c_write(60);//0000000000
    11f8:	8c e3       	ldi	r24, 0x3C	; 60
    11fa:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	90 e4       	ldi	r25, 0x40	; 64
    1202:	ac e9       	ldi	r26, 0x9C	; 156
    1204:	b5 e4       	ldi	r27, 0x45	; 69
    1206:	89 8f       	std	Y+25, r24	; 0x19
    1208:	9a 8f       	std	Y+26, r25	; 0x1a
    120a:	ab 8f       	std	Y+27, r26	; 0x1b
    120c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    120e:	69 8d       	ldd	r22, Y+25	; 0x19
    1210:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1212:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1214:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1216:	20 e0       	ldi	r18, 0x00	; 0
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	4a e7       	ldi	r20, 0x7A	; 122
    121c:	53 e4       	ldi	r21, 0x43	; 67
    121e:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    1222:	dc 01       	movw	r26, r24
    1224:	cb 01       	movw	r24, r22
    1226:	8d 8b       	std	Y+21, r24	; 0x15
    1228:	9e 8b       	std	Y+22, r25	; 0x16
    122a:	af 8b       	std	Y+23, r26	; 0x17
    122c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    122e:	6d 89       	ldd	r22, Y+21	; 0x15
    1230:	7e 89       	ldd	r23, Y+22	; 0x16
    1232:	8f 89       	ldd	r24, Y+23	; 0x17
    1234:	98 8d       	ldd	r25, Y+24	; 0x18
    1236:	20 e0       	ldi	r18, 0x00	; 0
    1238:	30 e0       	ldi	r19, 0x00	; 0
    123a:	40 e8       	ldi	r20, 0x80	; 128
    123c:	5f e3       	ldi	r21, 0x3F	; 63
    123e:	0e 94 83 03 	call	0x706	; 0x706 <__ltsf2>
    1242:	88 23       	and	r24, r24
    1244:	2c f4       	brge	.+10     	; 0x1250 <main+0x4d6>
		__ticks = 1;
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	9c 8b       	std	Y+20, r25	; 0x14
    124c:	8b 8b       	std	Y+19, r24	; 0x13
    124e:	3f c0       	rjmp	.+126    	; 0x12ce <main+0x554>
	else if (__tmp > 65535)
    1250:	6d 89       	ldd	r22, Y+21	; 0x15
    1252:	7e 89       	ldd	r23, Y+22	; 0x16
    1254:	8f 89       	ldd	r24, Y+23	; 0x17
    1256:	98 8d       	ldd	r25, Y+24	; 0x18
    1258:	20 e0       	ldi	r18, 0x00	; 0
    125a:	3f ef       	ldi	r19, 0xFF	; 255
    125c:	4f e7       	ldi	r20, 0x7F	; 127
    125e:	57 e4       	ldi	r21, 0x47	; 71
    1260:	0e 94 23 03 	call	0x646	; 0x646 <__gtsf2>
    1264:	18 16       	cp	r1, r24
    1266:	4c f5       	brge	.+82     	; 0x12ba <main+0x540>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1268:	69 8d       	ldd	r22, Y+25	; 0x19
    126a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    126c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    126e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1270:	20 e0       	ldi	r18, 0x00	; 0
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	40 e2       	ldi	r20, 0x20	; 32
    1276:	51 e4       	ldi	r21, 0x41	; 65
    1278:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    127c:	dc 01       	movw	r26, r24
    127e:	cb 01       	movw	r24, r22
    1280:	bc 01       	movw	r22, r24
    1282:	cd 01       	movw	r24, r26
    1284:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
    1288:	dc 01       	movw	r26, r24
    128a:	cb 01       	movw	r24, r22
    128c:	9c 8b       	std	Y+20, r25	; 0x14
    128e:	8b 8b       	std	Y+19, r24	; 0x13
    1290:	0f c0       	rjmp	.+30     	; 0x12b0 <main+0x536>
    1292:	89 e1       	ldi	r24, 0x19	; 25
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	9a 8b       	std	Y+18, r25	; 0x12
    1298:	89 8b       	std	Y+17, r24	; 0x11
    129a:	89 89       	ldd	r24, Y+17	; 0x11
    129c:	9a 89       	ldd	r25, Y+18	; 0x12
    129e:	01 97       	sbiw	r24, 0x01	; 1
    12a0:	f1 f7       	brne	.-4      	; 0x129e <main+0x524>
    12a2:	9a 8b       	std	Y+18, r25	; 0x12
    12a4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12a6:	8b 89       	ldd	r24, Y+19	; 0x13
    12a8:	9c 89       	ldd	r25, Y+20	; 0x14
    12aa:	01 97       	sbiw	r24, 0x01	; 1
    12ac:	9c 8b       	std	Y+20, r25	; 0x14
    12ae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12b0:	8b 89       	ldd	r24, Y+19	; 0x13
    12b2:	9c 89       	ldd	r25, Y+20	; 0x14
    12b4:	00 97       	sbiw	r24, 0x00	; 0
    12b6:	69 f7       	brne	.-38     	; 0x1292 <main+0x518>
    12b8:	14 c0       	rjmp	.+40     	; 0x12e2 <main+0x568>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12ba:	6d 89       	ldd	r22, Y+21	; 0x15
    12bc:	7e 89       	ldd	r23, Y+22	; 0x16
    12be:	8f 89       	ldd	r24, Y+23	; 0x17
    12c0:	98 8d       	ldd	r25, Y+24	; 0x18
    12c2:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
    12c6:	dc 01       	movw	r26, r24
    12c8:	cb 01       	movw	r24, r22
    12ca:	9c 8b       	std	Y+20, r25	; 0x14
    12cc:	8b 8b       	std	Y+19, r24	; 0x13
    12ce:	8b 89       	ldd	r24, Y+19	; 0x13
    12d0:	9c 89       	ldd	r25, Y+20	; 0x14
    12d2:	98 8b       	std	Y+16, r25	; 0x10
    12d4:	8f 87       	std	Y+15, r24	; 0x0f
    12d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    12d8:	98 89       	ldd	r25, Y+16	; 0x10
    12da:	01 97       	sbiw	r24, 0x01	; 1
    12dc:	f1 f7       	brne	.-4      	; 0x12da <main+0x560>
    12de:	98 8b       	std	Y+16, r25	; 0x10
    12e0:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(5000);
			i2c_write(22);//////////
    12e2:	86 e1       	ldi	r24, 0x16	; 22
    12e4:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
				//_delay_ms(5000);
				i2c_write(60);//0000000000
    12e8:	8c e3       	ldi	r24, 0x3C	; 60
    12ea:	0e 94 79 06 	call	0xcf2	; 0xcf2 <i2c_write>
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	90 e4       	ldi	r25, 0x40	; 64
    12f2:	ac e9       	ldi	r26, 0x9C	; 156
    12f4:	b5 e4       	ldi	r27, 0x45	; 69
    12f6:	8b 87       	std	Y+11, r24	; 0x0b
    12f8:	9c 87       	std	Y+12, r25	; 0x0c
    12fa:	ad 87       	std	Y+13, r26	; 0x0d
    12fc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12fe:	6b 85       	ldd	r22, Y+11	; 0x0b
    1300:	7c 85       	ldd	r23, Y+12	; 0x0c
    1302:	8d 85       	ldd	r24, Y+13	; 0x0d
    1304:	9e 85       	ldd	r25, Y+14	; 0x0e
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	4a e7       	ldi	r20, 0x7A	; 122
    130c:	53 e4       	ldi	r21, 0x43	; 67
    130e:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    1312:	dc 01       	movw	r26, r24
    1314:	cb 01       	movw	r24, r22
    1316:	8f 83       	std	Y+7, r24	; 0x07
    1318:	98 87       	std	Y+8, r25	; 0x08
    131a:	a9 87       	std	Y+9, r26	; 0x09
    131c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    131e:	6f 81       	ldd	r22, Y+7	; 0x07
    1320:	78 85       	ldd	r23, Y+8	; 0x08
    1322:	89 85       	ldd	r24, Y+9	; 0x09
    1324:	9a 85       	ldd	r25, Y+10	; 0x0a
    1326:	20 e0       	ldi	r18, 0x00	; 0
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	40 e8       	ldi	r20, 0x80	; 128
    132c:	5f e3       	ldi	r21, 0x3F	; 63
    132e:	0e 94 83 03 	call	0x706	; 0x706 <__ltsf2>
    1332:	88 23       	and	r24, r24
    1334:	2c f4       	brge	.+10     	; 0x1340 <main+0x5c6>
		__ticks = 1;
    1336:	81 e0       	ldi	r24, 0x01	; 1
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	9e 83       	std	Y+6, r25	; 0x06
    133c:	8d 83       	std	Y+5, r24	; 0x05
    133e:	3f c0       	rjmp	.+126    	; 0x13be <main+0x644>
	else if (__tmp > 65535)
    1340:	6f 81       	ldd	r22, Y+7	; 0x07
    1342:	78 85       	ldd	r23, Y+8	; 0x08
    1344:	89 85       	ldd	r24, Y+9	; 0x09
    1346:	9a 85       	ldd	r25, Y+10	; 0x0a
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	3f ef       	ldi	r19, 0xFF	; 255
    134c:	4f e7       	ldi	r20, 0x7F	; 127
    134e:	57 e4       	ldi	r21, 0x47	; 71
    1350:	0e 94 23 03 	call	0x646	; 0x646 <__gtsf2>
    1354:	18 16       	cp	r1, r24
    1356:	4c f5       	brge	.+82     	; 0x13aa <main+0x630>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1358:	6b 85       	ldd	r22, Y+11	; 0x0b
    135a:	7c 85       	ldd	r23, Y+12	; 0x0c
    135c:	8d 85       	ldd	r24, Y+13	; 0x0d
    135e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	40 e2       	ldi	r20, 0x20	; 32
    1366:	51 e4       	ldi	r21, 0x41	; 65
    1368:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    136c:	dc 01       	movw	r26, r24
    136e:	cb 01       	movw	r24, r22
    1370:	bc 01       	movw	r22, r24
    1372:	cd 01       	movw	r24, r26
    1374:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
    1378:	dc 01       	movw	r26, r24
    137a:	cb 01       	movw	r24, r22
    137c:	9e 83       	std	Y+6, r25	; 0x06
    137e:	8d 83       	std	Y+5, r24	; 0x05
    1380:	0f c0       	rjmp	.+30     	; 0x13a0 <main+0x626>
    1382:	89 e1       	ldi	r24, 0x19	; 25
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	9c 83       	std	Y+4, r25	; 0x04
    1388:	8b 83       	std	Y+3, r24	; 0x03
    138a:	8b 81       	ldd	r24, Y+3	; 0x03
    138c:	9c 81       	ldd	r25, Y+4	; 0x04
    138e:	01 97       	sbiw	r24, 0x01	; 1
    1390:	f1 f7       	brne	.-4      	; 0x138e <main+0x614>
    1392:	9c 83       	std	Y+4, r25	; 0x04
    1394:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1396:	8d 81       	ldd	r24, Y+5	; 0x05
    1398:	9e 81       	ldd	r25, Y+6	; 0x06
    139a:	01 97       	sbiw	r24, 0x01	; 1
    139c:	9e 83       	std	Y+6, r25	; 0x06
    139e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13a0:	8d 81       	ldd	r24, Y+5	; 0x05
    13a2:	9e 81       	ldd	r25, Y+6	; 0x06
    13a4:	00 97       	sbiw	r24, 0x00	; 0
    13a6:	69 f7       	brne	.-38     	; 0x1382 <main+0x608>
    13a8:	14 c0       	rjmp	.+40     	; 0x13d2 <main+0x658>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13aa:	6f 81       	ldd	r22, Y+7	; 0x07
    13ac:	78 85       	ldd	r23, Y+8	; 0x08
    13ae:	89 85       	ldd	r24, Y+9	; 0x09
    13b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    13b2:	0e 94 53 00 	call	0xa6	; 0xa6 <__fixunssfsi>
    13b6:	dc 01       	movw	r26, r24
    13b8:	cb 01       	movw	r24, r22
    13ba:	9e 83       	std	Y+6, r25	; 0x06
    13bc:	8d 83       	std	Y+5, r24	; 0x05
    13be:	8d 81       	ldd	r24, Y+5	; 0x05
    13c0:	9e 81       	ldd	r25, Y+6	; 0x06
    13c2:	9a 83       	std	Y+2, r25	; 0x02
    13c4:	89 83       	std	Y+1, r24	; 0x01
    13c6:	89 81       	ldd	r24, Y+1	; 0x01
    13c8:	9a 81       	ldd	r25, Y+2	; 0x02
    13ca:	01 97       	sbiw	r24, 0x01	; 1
    13cc:	f1 f7       	brne	.-4      	; 0x13ca <main+0x650>
    13ce:	9a 83       	std	Y+2, r25	; 0x02
    13d0:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(5000);

	i2c_stop();
    13d2:	0e 94 a0 06 	call	0xd40	; 0xd40 <i2c_stop>
    13d6:	ff cf       	rjmp	.-2      	; 0x13d6 <main+0x65c>

000013d8 <__prologue_saves__>:
    13d8:	2f 92       	push	r2
    13da:	3f 92       	push	r3
    13dc:	4f 92       	push	r4
    13de:	5f 92       	push	r5
    13e0:	6f 92       	push	r6
    13e2:	7f 92       	push	r7
    13e4:	8f 92       	push	r8
    13e6:	9f 92       	push	r9
    13e8:	af 92       	push	r10
    13ea:	bf 92       	push	r11
    13ec:	cf 92       	push	r12
    13ee:	df 92       	push	r13
    13f0:	ef 92       	push	r14
    13f2:	ff 92       	push	r15
    13f4:	0f 93       	push	r16
    13f6:	1f 93       	push	r17
    13f8:	cf 93       	push	r28
    13fa:	df 93       	push	r29
    13fc:	cd b7       	in	r28, 0x3d	; 61
    13fe:	de b7       	in	r29, 0x3e	; 62
    1400:	ca 1b       	sub	r28, r26
    1402:	db 0b       	sbc	r29, r27
    1404:	0f b6       	in	r0, 0x3f	; 63
    1406:	f8 94       	cli
    1408:	de bf       	out	0x3e, r29	; 62
    140a:	0f be       	out	0x3f, r0	; 63
    140c:	cd bf       	out	0x3d, r28	; 61
    140e:	09 94       	ijmp

00001410 <__epilogue_restores__>:
    1410:	2a 88       	ldd	r2, Y+18	; 0x12
    1412:	39 88       	ldd	r3, Y+17	; 0x11
    1414:	48 88       	ldd	r4, Y+16	; 0x10
    1416:	5f 84       	ldd	r5, Y+15	; 0x0f
    1418:	6e 84       	ldd	r6, Y+14	; 0x0e
    141a:	7d 84       	ldd	r7, Y+13	; 0x0d
    141c:	8c 84       	ldd	r8, Y+12	; 0x0c
    141e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1420:	aa 84       	ldd	r10, Y+10	; 0x0a
    1422:	b9 84       	ldd	r11, Y+9	; 0x09
    1424:	c8 84       	ldd	r12, Y+8	; 0x08
    1426:	df 80       	ldd	r13, Y+7	; 0x07
    1428:	ee 80       	ldd	r14, Y+6	; 0x06
    142a:	fd 80       	ldd	r15, Y+5	; 0x05
    142c:	0c 81       	ldd	r16, Y+4	; 0x04
    142e:	1b 81       	ldd	r17, Y+3	; 0x03
    1430:	aa 81       	ldd	r26, Y+2	; 0x02
    1432:	b9 81       	ldd	r27, Y+1	; 0x01
    1434:	ce 0f       	add	r28, r30
    1436:	d1 1d       	adc	r29, r1
    1438:	0f b6       	in	r0, 0x3f	; 63
    143a:	f8 94       	cli
    143c:	de bf       	out	0x3e, r29	; 62
    143e:	0f be       	out	0x3f, r0	; 63
    1440:	cd bf       	out	0x3d, r28	; 61
    1442:	ed 01       	movw	r28, r26
    1444:	08 95       	ret

00001446 <_exit>:
    1446:	f8 94       	cli

00001448 <__stop_program>:
    1448:	ff cf       	rjmp	.-2      	; 0x1448 <__stop_program>
